{"version":3,"sources":["pages/BudgetPage/BudgetPage.module.scss","pages/BudgetInfo/BudgetInfo.module.scss","pages/Main/Main.module.scss","logo.svg","components/BudgetSteps/BudgetSteps.module.scss","components/ExportCSV.js","components/BudgetSteps/BudgetSteps.js","pages/BudgetPage/BudgetPage.js","pages/BudgetInfo/BudgetInfo.js","pages/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ExportCSV","csvData","fileName","getEachTypeSheet","data","sheets","pages","forEach","pageObj","getPageData","info","sheetTotal","sheetData","push","pagename","label","total","quantity","comments","sheetName","infoData","getChildren","htotal","headers","subHeaders","items","header","headerObj","childObj","name","rate","children","child","Number","parseInt","parseFloat","undefined","length","title","ftfringe","ptfringe","getOverviewSheet","arrData","esttotal","direct","subcontractCost","pageTotal","pageData","concat","filter","val","split","reduce","acc","el","toFixed","rent","find","faOff","faoff","faOn","faon","revenue","gross","variance","Math","round","exportOptions","onClick","e","key","FileSaver","saveAs","Blob","JSON","stringify","type","convertedData","ws","XLSX","utils","json_to_sheet","wb","book_new","book_append_sheet","years","ceil","end","start","console","log","pageSheet","Custprops","Vendor","Project","project","Division","division","Grant","grant","Phone","phone","excelBuffer","write","bookType","Props","Title","Subject","Author","contact","Manager","Company","Category","CreatedDate","Date","exportToCSV","error","Item","disabled","Object","keys","some","overlay","DownOutlined","Step","Steps","BudgetSteps","props","direction","current","page","onChange","className","styles","stepsParent","icon","InfoCircleOutlined","UserOutlined","ToolOutlined","UsergroupAddOutlined","DollarOutlined","BankOutlined","Typography","Text","TextArea","Input","EditableContext","React","createContext","EditableRow","index","Form","useForm","form","component","Provider","value","EditableCell","editable","dataIndex","record","handleSave","inputType","restProps","useState","editing","setEditing","inputRef","useRef","useContext","useEffect","focus","toggleEdit","setFieldsValue","save","a","validateFields","values","childNode","edit","style","margin","rules","required","message","ref","onPressEnter","onBlur","paddingRight","Intl","NumberFormat","currency","format","map","accu","curr","strong","BudgetPage","handleDelete","newPageItems","findIndex","item","charAt","dispatch","step","handleAdd","count","newData","String","fromCharCode","childCount","handleAddChild","pageItems","row","hIndex","splice","cIndex","handleComment","addWrapper","createRef","newObj","columnNames","columns","tocap","toUpperCase","slice","render","text","isNaN","onConfirm","this","components","body","cell","col","onCell","content","pageTitle","marginTop","marginBottom","rowClassName","bordered","dataSource","expandable","expandRowByClick","pagination","hideOnSinglePage","summary","subsections","c","fullFringe","partFringe","Summary","Row","Cell","colSpan","fontWeight","comment","target","Component","RangePicker","DatePicker","formItemLayout","labelCol","xs","sm","md","lg","xl","xxl","wrapperCol","span","percentFormatter","BudgetInfo","payload","initialValues","range","moment","unix","Group","Button","formatter","min","max","Content","Layout","Main","uploadProps","position","zIndex","opacity","event","file","files","reader","FileReader","onload","parse","result","Error","jsonData","readAsText","pull","textAlign","align","display","htmlFor","class","UploadOutlined","id","Header","defaultData","require","reducer","state","action","newPages","commentPages","newInfo","entries","App","setStep","localState","localStorage","getItem","useReducer","setItem","width","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b8242a57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"BudgetPage_content__2lFbs\",\"pageTitle\":\"BudgetPage_pageTitle__3pfXV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"BudgetInfo_content__27obA\",\"pageTitle\":\"BudgetInfo_pageTitle__VDZRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Main_row__O0Ybk\",\"col\":\"Main_col__3wFmk\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stepsParent\":\"BudgetSteps_stepsParent__CZ_V4\"};","import React from \"react\";\nimport { Button, Menu, Dropdown } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport FileSaver from \"file-saver\";\nimport XLSX from \"xlsx\";\n\nconst ExportCSV = ({ csvData, fileName }) => {\n    const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;\";\n    const fileExtension = \".xlsx\";\n\n    // TODO: format the excel to look nice\n\n    const exportToCSV = (csvData, fileName) => {\n        const convertedData = getOverviewSheet(csvData);\n\n        const ws = XLSX.utils.json_to_sheet(convertedData);\n        let wb = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(wb, ws, \"Overview\");\n\n        // (start.unix - end.unix)/UNIX_YEAR = diff in years\n        const years = Math.ceil((csvData.info.end - csvData.info.start) / 31557600);\n        console.log(`${years} year${years > 1 ? \"s\" : \"\"}`);\n        const detailedSheets = getEachTypeSheet(csvData);\n        detailedSheets.forEach(({ sheetName, sheetData }) => {\n            const pageSheet = XLSX.utils.json_to_sheet(sheetData);\n            XLSX.utils.book_append_sheet(wb, pageSheet, sheetName);\n        });\n\n        wb.Custprops = {\n            Vendor: csvData.info.name,\n            Project: csvData.info.project,\n            Division: csvData.info.division,\n            \"Start Date\": csvData.info.start,\n            \"End Date\": csvData.info.end,\n            Grant: csvData.info.grant,\n            Phone: csvData.info.phone,\n        };\n        const excelBuffer = XLSX.write(wb, {\n            bookType: \"xlsx\",\n            type: \"array\",\n            Props: {\n                Title: csvData.info.project,\n                Subject: csvData.info.division,\n                Author: csvData.info.contact,\n                Manager: csvData.info.name,\n                Company: csvData.info.division,\n                Category: csvData.info.grant ? \"Grant\" : \"Non Grant\",\n                CreatedDate: new Date(),\n            },\n        });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    const getEachTypeSheet = (data) => {\n        let sheets = [];\n        data.pages.forEach((pageObj) => {\n            let [sheetTotal, sheetData] = getPageData(pageObj, data.info, true);\n            sheetData.push({ pagename: `Total ${pageObj.label}`, total: sheetTotal });\n            sheetData.push({}, { pagename: \"Comments\", quantity: pageObj.comments });\n            sheets.push({\n                sheetName: pageObj.label,\n                sheetData: sheetData,\n            });\n        });\n        return sheets;\n    };\n\n    const getPageData = (pageObj, infoData, getChildren) => {\n        let htotal = 0;\n        let headers = [];\n        let subHeaders = [];\n        pageObj.items.forEach((header) => {\n            let headerObj;\n            if (getChildren) headerObj = { pagename: `Total ${header.name}` };\n            else headerObj = { pagename: header.name };\n            let childObj;\n            headerObj.quantity = 0;\n            headerObj.rate = 0;\n            headerObj.total = 0;\n            if (getChildren) headers.push({ pagename: header.name });\n            header.children.forEach((child) => {\n                childObj = {\n                    pagename: child.name,\n                    quantity: child.quantity,\n                    rate: child.rate,\n                    total:\n                        Number.parseInt(child.quantity) * Number.parseFloat(child.rate),\n                };\n                headerObj.quantity += Number.parseInt(child.quantity);\n                headerObj.rate += Number.parseFloat(child.rate);\n                headerObj.total += childObj.total;\n                if (getChildren && childObj !== undefined) {\n                    headers.push(childObj);\n                }\n            });\n\n            if (header.children.length > 0) {\n                headerObj.rate = headerObj.rate / header.children.length;\n            } else if (getChildren) {\n                headers.push({});\n            }\n            htotal += headerObj.total;\n            subHeaders.push(headerObj);\n            headers.push(headerObj);\n            if (getChildren) headers.push({});\n        });\n\n        // Calculate Composite Fringes for labor\n        if (pageObj.title === \"labor\") {\n            htotal += (infoData.ftfringe / 100) * subHeaders[0].total;\n            htotal += (infoData.ptfringe / 100) * subHeaders[1].total;\n        }\n\n        return [htotal, headers];\n    };\n\n    const getOverviewSheet = (data) => {\n        let arrData = [];\n        let esttotal = 0;\n        let direct = 0;\n        let subcontractCost = 0;\n        data.pages.forEach((pageObj) => {\n            arrData.push(\n                {},\n                {\n                    pagename: pageObj.label,\n                    comments: pageObj.comments,\n                }\n            );\n            const [pageTotal, pageData] = getPageData(pageObj, data.info, false);\n            arrData = arrData.concat(pageData);\n            if (pageObj.title === \"consult\") {\n                subcontractCost = pageData\n                    .filter((val) => val.pagename.split(\" \")[0] === \"Subcontracts\")\n                    .reduce((acc, el) => acc + Number.parseInt(el.total), 0);\n            }\n            if (pageObj.title !== \"overhead\") {\n                direct += pageTotal;\n                esttotal += pageTotal;\n                arrData.push({\n                    pagename: `Total ${pageObj.label}`,\n                    total: pageTotal.toFixed(2),\n                });\n            } else {\n                const rent = pageData.find((val) => val.pagename === \"Rent\").total;\n                const faOff =\n                    rent > 0\n                        ? (esttotal - subcontractCost + rent) * (data.info.faoff / 100)\n                        : 0;\n                const faOn =\n                    rent === 0\n                        ? (esttotal - subcontractCost + rent) * (data.info.faon / 100)\n                        : 0;\n                esttotal += faOff + faOn;\n                arrData.push(\n                    {\n                        pagename: `NJII - F&A Rate - Calculation Off-Site (${data.info.faoff}%)`,\n                        total: faOff.toFixed(2),\n                    },\n                    {\n                        pagename: `NJII - F&A Rate - Calculation On-Site (${data.info.faon}%)`,\n                        total: faOn.toFixed(2),\n                    }\n                );\n                arrData.push({\n                    pagename: `Total ${pageObj.label}`,\n                    total: (pageTotal + faOff + faOn).toFixed(2),\n                });\n            }\n        });\n\n        const revenue = (data.info.gross / 100 || 0) * esttotal + esttotal;\n        const variance = revenue - esttotal;\n\n        arrData.push(\n            {},\n            {},\n            {\n                pagename: \"Total Estimated - Before Margin\",\n                total: esttotal.toFixed(2),\n            },\n            {\n                pagename: \"Direct Costs (Budget Use Only)\",\n                total: direct.toFixed(2),\n            },\n            {\n                pagename: \"Gross Margin (Market Based)\",\n                rate: `${data.info.gross || 0}%`,\n                total: ((data.info.gross / 100 || 0) * esttotal).toFixed(2),\n            },\n            {},\n            {\n                pagename: \"Total Estimated Price\",\n                total: ((data.info.gross / 100 || 0) * esttotal + esttotal).toFixed(2),\n            }\n        );\n        const rtnArray = [\n            {},\n            {\n                pagename: \"Total Revenue\",\n                quantity: \"\",\n                rate: \"\",\n                total: Math.round(revenue),\n                comments: \"\",\n            },\n            {\n                pagename: \"Total Expense\",\n                quantity: \"\",\n                rate: \"\",\n                total: Math.round(esttotal),\n                comments: \"\",\n            },\n            { pagename: \"Variance\", quantity: \"\", rate: \"\", total: Math.round(variance) },\n            {},\n        ];\n        return rtnArray.concat(arrData);\n    };\n\n    const handleExport = (e) => {\n        switch (e.key) {\n            case \"json\":\n                FileSaver.saveAs(\n                    new Blob([JSON.stringify(csvData, null, 2)], {\n                        type: \"application/json\",\n                    }),\n                    `${fileName}.json`\n                );\n                break;\n            case \"excel\":\n                exportToCSV(csvData, fileName);\n                break;\n            default:\n                console.error(\"Internal Error\", e);\n                break;\n        }\n    };\n\n    const exportOptions = (\n        <Menu onClick={handleExport}>\n            <Menu.Item key=\"json\">To JSON</Menu.Item>\n            <Menu.Item\n                disabled={Object.keys(csvData.info).some(\n                    (key) => csvData.info[key] === \"\" || csvData.info[key] === null\n                )}\n                key=\"excel\"\n            >\n                To Excel\n            </Menu.Item>\n        </Menu>\n    );\n\n    return (\n        <Dropdown overlay={exportOptions}>\n            <Button type=\"primary\">\n                Export <DownOutlined />\n            </Button>\n        </Dropdown>\n    );\n};\n\nexport default ExportCSV;\n","import React from \"react\";\nimport { Steps } from \"antd\";\nimport {\n    UserOutlined,\n    ToolOutlined,\n    UsergroupAddOutlined,\n    DollarOutlined,\n    BankOutlined,\n    InfoCircleOutlined,\n} from \"@ant-design/icons\";\nimport styles from \"./BudgetSteps.module.scss\";\n\nconst { Step } = Steps;\n\nexport default function BudgetSteps(props) {\n    return (\n        <Steps\n            direction=\"vertical\"\n            current={props.page}\n            onChange={props.onChange}\n            className={styles.stepsParent}\n        >\n            <Step title=\"Information\" icon={<InfoCircleOutlined />} />\n            <Step title=\"Labor\" icon={<UserOutlined />} />\n            <Step title=\"Equiptment and Supplies\" icon={<ToolOutlined />} />\n            <Step title=\"Consultants and Contractors\" icon={<UsergroupAddOutlined />} />\n            <Step title=\"Non-Personnel Expenses\" icon={<DollarOutlined />} />\n            <Step title=\"Overhead\" icon={<BankOutlined />} />\n        </Steps>\n    );\n}\n","import React, { Component, useContext, useState, useEffect, useRef } from \"react\";\nimport styles from \"./BudgetPage.module.scss\";\n\nimport { Table, Input, InputNumber, Popconfirm, Form, Button, Typography } from \"antd\";\nconst { Title, Text } = Typography;\nconst { TextArea } = Input;\n\nconst capitalize = (tocap) => tocap.charAt(0).toUpperCase() + tocap.slice(1);\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ index, ...props }) => {\n    const [form] = Form.useForm();\n    return (\n        <Form form={form} component={false}>\n            <EditableContext.Provider value={form}>\n                <tr {...props} />\n            </EditableContext.Provider>\n        </Form>\n    );\n};\n\nconst EditableCell = ({\n    title,\n    editable,\n    children,\n    dataIndex,\n    record,\n    handleSave,\n    inputType,\n    ...restProps\n}) => {\n    const [editing, setEditing] = useState(false);\n    const inputRef = useRef();\n    const form = useContext(EditableContext);\n    useEffect(() => {\n        if (editing) {\n            inputRef.current.focus();\n        }\n    }, [editing]);\n\n    const toggleEdit = () => {\n        setEditing(!editing);\n        form.setFieldsValue({\n            [dataIndex]: record[dataIndex],\n        });\n    };\n\n    const save = async (e) => {\n        try {\n            const values = await form.validateFields();\n            toggleEdit();\n            handleSave({ ...record, ...values });\n        } catch (errInfo) {\n            console.log(\"Save failed:\", errInfo);\n        }\n    };\n\n    let childNode = children;\n\n    if (editable && (!record.header || (record.edit && dataIndex === \"name\"))) {\n        childNode = editing ? (\n            <Form.Item\n                style={{\n                    margin: 0,\n                }}\n                name={dataIndex}\n                rules={[\n                    {\n                        required: true,\n                        message: `${title} is required.`,\n                    },\n                ]}\n            >\n                {inputType === \"number\" ? (\n                    <InputNumber ref={inputRef} onPressEnter={save} onBlur={save} />\n                ) : (\n                    <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n                )}\n            </Form.Item>\n        ) : (\n            <div\n                className=\"editable-cell-value-wrap\"\n                style={{\n                    paddingRight: 24,\n                }}\n                onClick={toggleEdit}\n            >\n                {dataIndex === \"rate\"\n                    ? new Intl.NumberFormat(\"en-US\", {\n                          style: \"currency\",\n                          currency: \"USD\",\n                      }).format(Number.parseFloat(children[1]))\n                    : children}\n            </div>\n        );\n    } else if (\n        record &&\n        record.header &&\n        record.children.length > 0 &&\n        dataIndex === \"rate\"\n    ) {\n        const total = record.children\n            .map((el) => Number.parseFloat(el[dataIndex]))\n            .reduce((accu, curr) => accu + curr);\n        childNode = (\n            <Text strong>\n                {new Intl.NumberFormat(\"en-US\", {\n                    style: \"currency\",\n                    currency: \"USD\",\n                }).format(total / record.children.length)}\n            </Text>\n        );\n    } else if (\n        record &&\n        record.header &&\n        record.children.length > 0 &&\n        (dataIndex === \"quantity\" || dataIndex === \"total\")\n    ) {\n        const total = record.children\n            .map((el) => Number.parseFloat(el[dataIndex]))\n            .reduce((accu, curr) => accu + curr);\n        childNode = <Text strong>{total}</Text>;\n    }\n\n    return <td {...restProps}>{childNode}</td>;\n};\n\nexport default class BudgetPage extends Component {\n    constructor(props) {\n        super(props);\n        this.addWrapper = React.createRef();\n\n        let newObj = this.props.pageData.items[0];\n        const columnNames = Object.keys(newObj).filter(\n            (key) =>\n                key !== \"key\" &&\n                key !== \"children\" &&\n                key !== \"header\" &&\n                key !== \"childCount\"\n        );\n        this.columns = columnNames.map((key) => ({\n            title: capitalize(key),\n            dataIndex: key,\n            inputType: key === \"name\" ? \"text\" : \"number\",\n            editable: true,\n            key: key,\n        }));\n        this.columns.push(\n            {\n                title: \"Total\",\n                dataIndex: \"total\",\n                render: (text, record) => {\n                    if (!record.header) {\n                        let total =\n                            Number.parseInt(record.quantity) *\n                            Number.parseFloat(record.rate);\n                        if (isNaN(total)) total = 0;\n                        return new Intl.NumberFormat(\"en-US\", {\n                            style: \"currency\",\n                            currency: \"USD\",\n                        }).format(total);\n                    } else {\n                        let total = record.children\n                            .map((el) => {\n                                if (\n                                    !isNaN(Number.parseInt(el.quantity)) &&\n                                    !isNaN(Number.parseFloat(el.rate))\n                                ) {\n                                    return (\n                                        Number.parseInt(el.quantity) *\n                                        Number.parseFloat(el.rate)\n                                    );\n                                } else return 0;\n                            })\n                            .reduce((acc, curr) => acc + curr, 0);\n                        return (\n                            <Text strong>\n                                {new Intl.NumberFormat(\"en-US\", {\n                                    style: \"currency\",\n                                    currency: \"USD\",\n                                }).format(total)}\n                            </Text>\n                        );\n                    }\n                },\n            },\n            {\n                title: \"operation\",\n                dataIndex: \"operation\",\n                render: (text, record) =>\n                    this.props.pageData.items.length >= 1 ? (\n                        <>\n                            {record.header ? (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() => this.handleAddChild(record.key)}\n                                >\n                                    Add\n                                </Button>\n                            ) : (\n                                <Popconfirm\n                                    title=\"Sure to delete?\"\n                                    onConfirm={() => this.handleDelete(record.key)}\n                                >\n                                    <Button type=\"link\">Delete</Button>\n                                </Popconfirm>\n                            )}\n                            {record.edit !== undefined && record.edit && (\n                                <Popconfirm\n                                    title=\"Sure to delete?\"\n                                    onConfirm={() => this.handleDelete(record.key)}\n                                >\n                                    <Button type=\"link\">Delete</Button>\n                                </Popconfirm>\n                            )}\n                        </>\n                    ) : null,\n            }\n        );\n    }\n\n    // Only drawback is that you can only have at most 26 main sections per page\n    // keys are: section is [a-z] and subsection is matching [a-z] with [0-9]+ appended\n    handleDelete = (key) => {\n        let newPageItems = this.props.pageData.items;\n        const index = newPageItems.findIndex((item) => item.key === key.charAt(0));\n        if (key.length > 1)\n            newPageItems[index].children = newPageItems[index].children.filter(\n                (item) => item.key !== key\n            );\n        else newPageItems = newPageItems.filter((item) => item.key !== key);\n        // this.props.setPageData(newPageItems);\n        this.props.dispatch({\n            type: \"page\",\n            step: this.props.step,\n            pageData: newPageItems,\n        });\n    };\n\n    handleAdd = () => {\n        const { pageData } = this.props;\n        const count = pageData.items.length + 1;\n        const newData = {\n            key: String.fromCharCode(96 + count),\n            name: `${pageData.label} Item ${count}`,\n            quantity: null,\n            rate: null,\n            header: true,\n            edit: true,\n            childCount: 0,\n            children: [],\n        };\n        // this.props.setPageData([...pageData.items, newData]);\n        this.props.dispatch({\n            type: \"page\",\n            step: this.props.step,\n            pageData: [...pageData.items, newData],\n        });\n    };\n\n    handleAddChild = (key) => {\n        const pageItems = this.props.pageData.items;\n        const index = pageItems.findIndex((item) => item.key === key);\n        if (index < 0) {\n            return;\n        }\n        const count = pageItems[index].childCount + 1;\n        pageItems[index].childCount = count;\n        pageItems[index].children.push({\n            key: key + count,\n            name: `Item ${count}`,\n            quantity: 0,\n            rate: 0,\n            header: false,\n        });\n        //this.props.setPageData(pageItems);\n        this.props.dispatch({ type: \"page\", step: this.props.step, pageData: pageItems });\n    };\n\n    handleSave = (row) => {\n        const newData = [...this.props.pageData.items];\n        const hIndex = newData.findIndex((item) => row.key.charAt(0) === item.key);\n        const item = newData[hIndex];\n        if (row.header === undefined || !row.header) {\n            const cIndex = newData[hIndex].children.findIndex(\n                (item) => row.key === item.key\n            );\n            const child = newData[hIndex].children[cIndex];\n            newData[hIndex].children.splice(cIndex, 1, {\n                ...child,\n                ...row,\n            });\n        } else {\n            newData.splice(hIndex, 1, { ...item, ...row });\n        }\n        // this.props.setPageData(newData);\n        this.props.dispatch({ type: \"page\", step: this.props.step, pageData: newData });\n    };\n\n    handleComment = async () => {};\n\n    render() {\n        const { pageData } = this.props;\n        const components = {\n            body: {\n                row: EditableRow,\n                cell: EditableCell,\n            },\n        };\n        const columns = this.columns.map((col) => {\n            if (!col.editable) {\n                return col;\n            }\n\n            return {\n                ...col,\n                onCell: (record) => ({\n                    record,\n                    editable: col.editable,\n                    dataIndex: col.dataIndex,\n                    title: col.title,\n                    inputType: col.inputType,\n                    handleSave: this.handleSave,\n                }),\n            };\n        });\n        return (\n            <div className={styles.content}>\n                <Title className={styles.pageTitle}>{this.props.pageData.label}</Title>\n                <Button\n                    onClick={this.handleAdd}\n                    type=\"primary\"\n                    style={{\n                        marginTop: 24,\n                        marginBottom: 16,\n                    }}\n                    ref={this.addWrapper}\n                >\n                    Add a Section\n                </Button>\n                <Table\n                    components={components}\n                    rowClassName={() => \"editable-row\"}\n                    bordered\n                    dataSource={pageData.items}\n                    columns={columns}\n                    expandable={{\n                        expandRowByClick: true,\n                    }}\n                    pagination={{ hideOnSinglePage: true }}\n                    summary={(pageData) => {\n                        const subsections = pageData.map((el) =>\n                            el.children\n                                .map(\n                                    (c) =>\n                                        Number.parseInt(c.quantity) *\n                                        Number.parseFloat(c.rate)\n                                )\n                                .reduce((acc, curr) => acc + curr, 0)\n                        );\n                        let total = subsections.reduce((acc, curr) => acc + curr, 0);\n                        const fullFringe = this.props.info.ftfringe || 0;\n                        const partFringe = this.props.info.ptfringe || 0;\n                        if (pageData[0].name === \"Full Time Personnel\")\n                            total +=\n                                subsections[0] * (fullFringe / 100) +\n                                subsections[1] * (partFringe / 100);\n                        return (\n                            <>\n                                {pageData[0].name === \"Full Time Personnel\" && (\n                                    <>\n                                        <Table.Summary.Row>\n                                            <Table.Summary.Cell colSpan={2}>\n                                                <Text>Composite Fringes - FT</Text>\n                                            </Table.Summary.Cell>\n                                            <Table.Summary.Cell>\n                                                {fullFringe}%\n                                            </Table.Summary.Cell>\n                                            <Table.Summary.Cell>\n                                                <Text style={{ fontWeight: \"bold\" }}>\n                                                    {new Intl.NumberFormat(\"en-US\", {\n                                                        style: \"currency\",\n                                                        currency: \"USD\",\n                                                    }).format(\n                                                        subsections[0] *\n                                                            (fullFringe / 100)\n                                                    )}\n                                                </Text>\n                                            </Table.Summary.Cell>\n                                        </Table.Summary.Row>\n                                        <Table.Summary.Row>\n                                            <Table.Summary.Cell colSpan={2}>\n                                                <Text>Composite Fringes - PT</Text>\n                                            </Table.Summary.Cell>\n                                            <Table.Summary.Cell>\n                                                {partFringe}%\n                                            </Table.Summary.Cell>\n                                            <Table.Summary.Cell>\n                                                <Text style={{ fontWeight: \"bold\" }}>\n                                                    {new Intl.NumberFormat(\"en-US\", {\n                                                        style: \"currency\",\n                                                        currency: \"USD\",\n                                                    }).format(\n                                                        subsections[1] *\n                                                            (partFringe / 100)\n                                                    )}\n                                                </Text>\n                                            </Table.Summary.Cell>\n                                        </Table.Summary.Row>\n                                    </>\n                                )}\n                                <Table.Summary.Row>\n                                    <Table.Summary.Cell colSpan={3}>\n                                        Total\n                                    </Table.Summary.Cell>\n                                    <Table.Summary.Cell>\n                                        <Text\n                                            style={{\n                                                fontWeight: \"bolder\",\n                                            }}\n                                        >\n                                            {new Intl.NumberFormat(\"en-US\", {\n                                                style: \"currency\",\n                                                currency: \"USD\",\n                                            }).format(total)}\n                                        </Text>\n                                    </Table.Summary.Cell>\n                                </Table.Summary.Row>\n                            </>\n                        );\n                    }}\n                />\n                <Form.Item style={{ margin: \"2rem\" }} label=\"Comments\">\n                    <TextArea\n                        value={this.props.pageData.comments}\n                        onChange={(val) => {\n                            this.props.dispatch({\n                                type: \"comment\",\n                                comment: val.target.value,\n                                step: this.props.step,\n                            });\n                        }}\n                    />\n                </Form.Item>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport styles from \"./BudgetInfo.module.scss\";\n\nimport { Typography, Form, DatePicker, Input, InputNumber, Radio } from \"antd\";\nimport moment from \"moment\";\n\nconst { Title } = Typography;\nconst { RangePicker } = DatePicker;\n\nconst formItemLayout = {\n    labelCol: { xs: 16, sm: 14, md: 12, lg: 8, xl: 6, xxl: 4 },\n    wrapperCol: { span: \"16\" },\n};\nconst dateFormat = \"MM/DD/YYYY\";\nconst percentFormatter = (value) => `${value}%`;\n\nexport default function BudgetInfo(props) {\n    const save = async () => {\n        const values = await props.form.validateFields();\n        props.dispatch({ type: \"info\", payload: values });\n    };\n    return (\n        <div className={styles.content}>\n            <Title className={styles.pageTitle}>Information</Title>\n            <Form\n                form={props.form}\n                {...formItemLayout}\n                initialValues={{\n                    name: props.infoData.name,\n                    project: props.infoData.project,\n                    division: props.infoData.division,\n                    range:\n                        props.infoData.start && props.infoData.end\n                            ? [\n                                  moment.unix(props.infoData.start),\n                                  moment.unix(props.infoData.end),\n                              ]\n                            : null,\n                    grant: props.infoData.grant,\n                    contact: props.infoData.contact,\n                    phone: props.infoData.phone,\n                    faoff: props.infoData.faoff,\n                    faon: props.infoData.faon,\n                    gross: props.infoData.gross,\n                    ftfringe: props.infoData.ftfringe,\n                    ptfringe: props.infoData.ptfringe,\n                }}\n            >\n                <Form.Item name=\"name\" label=\"Vendor/Contractor Name\">\n                    <Input onPressEnter={save} onBlur={save} />\n                </Form.Item>\n                <Form.Item name=\"project\" label=\"Project Name\">\n                    <Input onPressEnter={save} onBlur={save} />\n                </Form.Item>\n                <Form.Item name=\"division\" label=\"Division Name\">\n                    <Input onPressEnter={save} onBlur={save} />\n                </Form.Item>\n                <Form.Item name=\"range\" label=\"Project Period\">\n                    <RangePicker onChange={save} format={dateFormat} />\n                </Form.Item>\n                <Form.Item name=\"grant\" label=\"Grant or Non-Grant\">\n                    <Radio.Group>\n                        <Radio.Button value={true}>Grant</Radio.Button>\n                        <Radio.Button value={false}>Non Grant</Radio.Button>\n                    </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"contact\" label=\"Contact Name\">\n                    <Input onPressEnter={save} onBlur={save} />\n                </Form.Item>\n                <Form.Item name=\"phone\" label=\"Phone Number\">\n                    <Input type=\"tel\" onPressEnter={save} onBlur={save} />\n                </Form.Item>\n\n                <Form.Item name=\"faoff\" label=\"F&A Rate Off-Site\">\n                    <InputNumber\n                        formatter={percentFormatter}\n                        onPressEnter={save}\n                        onBlur={save}\n                        min={0}\n                    />\n                </Form.Item>\n                <Form.Item name=\"faon\" label=\"F&A Rate On-Site\">\n                    <InputNumber\n                        formatter={percentFormatter}\n                        onPressEnter={save}\n                        onBlur={save}\n                        min={0}\n                    />\n                </Form.Item>\n                <Form.Item name=\"ftfringe\" label=\"Composite Fringes - FT\">\n                    <InputNumber\n                        formatter={percentFormatter}\n                        onPressEnter={save}\n                        onBlur={save}\n                        min={0}\n                        max={100}\n                    />\n                </Form.Item>\n                <Form.Item name=\"ptfringe\" label=\"Composite Fringes - PT\">\n                    <InputNumber\n                        formatter={percentFormatter}\n                        onPressEnter={save}\n                        onBlur={save}\n                        min={0}\n                        max={100}\n                    />\n                </Form.Item>\n                <Form.Item name=\"gross\" label=\"Gross Margin\">\n                    <InputNumber\n                        formatter={percentFormatter}\n                        onPressEnter={save}\n                        onBlur={save}\n                        min={0}\n                    />\n                </Form.Item>\n            </Form>\n        </div>\n    );\n}\n\n//  <Col>\n//                         <Form.Item\n//                             name=\"raise\"\n//                             label=\"Yearly Wage Raise\"\n//                             labelCol={{ span: 15 }}\n//                         >\n//                             <InputNumber\n//                                 formatter={percentFormatter}\n//                                 onPressEnter={save}\n//                                 onBlur={save}\n//                                 min={0}\n//                                 max={100}\n//                             />\n//                         </Form.Item>\n//                     </Col>\n","import React from \"react\";\n\nimport ExportCSV from \"../../components/ExportCSV\";\nimport BudgetSteps from \"../../components/BudgetSteps\";\nimport BudgetPage from \"../BudgetPage\";\nimport BudgetInfo from \"../BudgetInfo\";\n\nimport styles from \"./Main.module.scss\";\nimport { Layout, Col, Row, Button, Space, Popconfirm, Input, message } from \"antd\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nconst { Content } = Layout;\n\nexport default function Main(props) {\n    const uploadProps = {\n        style: {\n            position: \"absolute\",\n            zIndex: \"-1\",\n            opacity: \"0\",\n        },\n        onChange(event) {\n            var file = event.target.files[0];\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                // The file's text will be printed here\n                try {\n                    const newData = JSON.parse(e.target.result);\n                    if (!newData.info || !newData.pages) {\n                        throw new Error(\"Must be properly formatted JSON.\");\n                    }\n                    props.dispatch({ type: \"upload\", jsonData: newData });\n                } catch (e) {\n                    message.error(e.message);\n                    console.error(e);\n                }\n            };\n            reader.readAsText(file);\n        },\n    };\n    return (\n        <Content>\n            <Row className={styles.row}>\n                <Col span={5} pull={5} className={styles.col}>\n                    <BudgetSteps onChange={props.onChange} page={props.step} />\n                    <div style={{ textAlign: \"center\", marginBottom: \"3rem\" }}>\n                        <Space align=\"center\" style={{ marginBottom: \"1rem\" }}>\n                            <ExportCSV\n                                csvData={props.data}\n                                fileName={\"Pricing and Budget\"}\n                            />\n                            <Popconfirm\n                                title=\"Sure to reset?\"\n                                onConfirm={() => props.dispatch({ type: \"reset\" })}\n                            >\n                                <Button type=\"ghost\">Reset</Button>\n                            </Popconfirm>\n                        </Space>\n                        <div style={{ display: \"block\" }}>\n                            <label htmlFor=\"uploadJSON\">\n                                <div class=\"ant-btn\">\n                                    <UploadOutlined /> Upload JSON\n                                </div>\n                            </label>\n                            <Input type=\"file\" id=\"uploadJSON\" {...uploadProps} />\n                        </div>\n                    </div>\n                </Col>\n                <Col span={19} push={5}>\n                    {props.step === 0 ? (\n                        <BudgetInfo\n                            dispatch={props.dispatch}\n                            infoData={props.data.info}\n                            form={props.form}\n                        />\n                    ) : (\n                        <BudgetPage\n                            pageData={props.data.pages[props.step - 1]}\n                            info={props.data.info}\n                            step={props.step - 1}\n                            dispatch={props.dispatch}\n                        />\n                    )}\n                </Col>\n            </Row>\n        </Content>\n    );\n}\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Main from \"./pages/Main\";\nimport { Layout, Form } from \"antd\";\nconst { Header } = Layout;\n\nlet defaultData = require(\"./utils/default.json\");\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case \"page\": // action = {step, pageData}\n            const newPages = [...state.pages];\n            newPages[action.step].items = action.pageData;\n            return { ...state, pages: newPages };\n        case \"comment\": // action = {step, comment}\n            const commentPages = [...state.pages];\n            commentPages[action.step].comments = action.comment;\n            return {\n                ...state,\n                pages: commentPages,\n            };\n        case \"info\": // action = {dataItem, infoData}\n            let newInfo = state.info;\n            for (const [key, value] of Object.entries(action.payload)) {\n                if (value === undefined || value === null) continue;\n                if (key === \"range\") {\n                    const [start, end] = value;\n                    newInfo.start = start.unix();\n                    newInfo.end = end.unix();\n                } else {\n                    newInfo[key] = value;\n                }\n            }\n            return { ...state, info: newInfo };\n        case \"upload\": // action = {jsonData}\n            return action.jsonData;\n        case \"reset\":\n            return defaultData;\n        default:\n            throw new Error(\"Action of unknown type.\");\n    }\n}\n\n// TODO: change to useReducer and create reducer function\nfunction App() {\n    const [form] = Form.useForm();\n    const [step, setStep] = useState(0);\n    const onChange = (current) => setStep(current);\n    const localState = JSON.parse(localStorage.getItem(\"VLProjectBudget\")) || defaultData;\n    const [data, dispatch] = useReducer(reducer, localState || defaultData);\n    useEffect(() => {\n        form.setFieldsValue(data.info);\n        localStorage.setItem(\"VLProjectBudget\", JSON.stringify(data));\n    }, [data, form]);\n\n    if (!data.info || !data.pages) {\n        dispatch({ type: \"reset\" });\n    } else if (\n        JSON.stringify(defaultData.pages.map((val) => val.label)) !==\n        JSON.stringify(data.pages.map((val) => val.label))\n    ) {\n        dispatch({ type: \"reset\" });\n    }\n    return (\n        <Layout>\n            <Header\n                style={{\n                    position: \"fixed\",\n                    zIndex: 2,\n                    width: \"100%\",\n                    textAlign: \"center\",\n                }}\n            >\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </Header>\n            <Layout>\n                <Main\n                    form={form}\n                    step={step}\n                    data={data}\n                    dispatch={dispatch}\n                    onChange={onChange}\n                />\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}