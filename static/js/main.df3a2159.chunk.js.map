{"version":3,"sources":["logo.svg","components/BudgetSteps/BudgetSteps.module.scss","pages/BudgetPage/BudgetPage.module.scss","pages/Main/Main.module.scss","components/ExportCSV.js","components/BudgetSteps/BudgetSteps.js","pages/BudgetPage/BudgetPage.js","pages/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ExportCSV","csvData","fileName","style","marginBottom","type","onClick","e","wb","Sheets","data","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","Step","Steps","BudgetSteps","props","direction","current","page","onChange","className","styles","stepsParent","title","icon","UserOutlined","ToolOutlined","UsergroupAddOutlined","DollarOutlined","BankOutlined","Title","Typography","Text","EditableContext","React","createContext","EditableRow","index","Form","useForm","form","component","Provider","value","EditableCell","editable","children","dataIndex","record","handleSave","restProps","inputType","useState","editing","setEditing","inputRef","useRef","useContext","useEffect","focus","toggleEdit","setFieldsValue","save","a","validateFields","values","console","log","childNode","header","Item","margin","name","rules","required","message","ref","onPressEnter","onBlur","paddingRight","length","total","map","el","Number","parseFloat","reduce","accu","curr","strong","BudgetPage","handleDelete","key","newPageItems","pageData","items","findIndex","item","charAt","filter","setPageData","handleAdd","count","newData","String","fromCharCode","label","quantity","rate","edit","childCount","handleAddChild","pageItems","push","row","hIndex","undefined","splice","cIndex","child","addWrapper","createRef","newObj","columnNames","Object","keys","columns","tocap","toUpperCase","slice","render","text","isNaN","parseInt","acc","toFixed","onConfirm","this","components","body","cell","col","onCell","content","rowClassName","bordered","dataSource","summary","c","Summary","Row","Cell","fontWeight","Component","Content","Layout","Main","span","pull","height","position","left","backgroundColor","top","zIndex","minWidth","step","textAlign","setData","Header","defaultData","require","App","setStep","storageKey","JSON","parse","sessionStorage","getItem","stringData","stringify","setItem","useSessionState","width","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.df3a2159.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stepsParent\":\"BudgetSteps_stepsParent__CZ_V4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"BudgetPage_content__2lFbs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Main_row__O0Ybk\"};","import React from \"react\";\nimport { Button } from \"antd\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nconst ExportCSV = ({ csvData, fileName }) => {\n    const fileType =\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".xlsx\";\n\n    const exportToCSV = (csvData, fileName) => {\n        const ws = XLSX.utils.json_to_sheet(csvData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    return (\n        <Button\n            style={{ marginBottom: \"4rem\" }}\n            type=\"primary\"\n            onClick={(e) => exportToCSV(csvData, fileName)}\n        >\n            Export\n        </Button>\n    );\n};\n\nexport default ExportCSV;\n","import React from \"react\";\nimport { Steps } from \"antd\";\nimport {\n    UserOutlined,\n    ToolOutlined,\n    UsergroupAddOutlined,\n    DollarOutlined,\n    BankOutlined,\n} from \"@ant-design/icons\";\nimport styles from \"./BudgetSteps.module.scss\";\n\nconst { Step } = Steps;\n\nexport default function BudgetSteps(props) {\n    return (\n        <Steps\n            direction=\"vertical\"\n            current={props.page}\n            onChange={props.onChange}\n            className={styles.stepsParent}\n        >\n            <Step title=\"Labor\" icon={<UserOutlined />} />\n            <Step title=\"Equiptment and Supplies\" icon={<ToolOutlined />} />\n            <Step title=\"Consultants\" icon={<UsergroupAddOutlined />} />\n            <Step title=\"Non-Personnel Expenses\" icon={<DollarOutlined />} />\n            <Step title=\"Overhead\" icon={<BankOutlined />} />\n        </Steps>\n    );\n}\n","import React, { Component, useContext, useState, useEffect, useRef } from \"react\";\nimport styles from \"./BudgetPage.module.scss\";\n\nimport { Table, Input, InputNumber, Popconfirm, Form, Button, Typography } from \"antd\";\nconst { Title, Text } = Typography;\n\nconst capitalize = (tocap) => tocap.charAt(0).toUpperCase() + tocap.slice(1);\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ index, ...props }) => {\n    const [form] = Form.useForm();\n    return (\n        <Form form={form} component={false}>\n            <EditableContext.Provider value={form}>\n                <tr {...props} />\n            </EditableContext.Provider>\n        </Form>\n    );\n};\n\nconst EditableCell = ({\n    title,\n    editable,\n    children,\n    dataIndex,\n    record,\n    handleSave,\n    inputType,\n    ...restProps\n}) => {\n    const [editing, setEditing] = useState(false);\n    const inputRef = useRef();\n    const form = useContext(EditableContext);\n    useEffect(() => {\n        if (editing) {\n            inputRef.current.focus();\n        }\n    }, [editing]);\n\n    const toggleEdit = () => {\n        setEditing(!editing);\n        form.setFieldsValue({\n            [dataIndex]: record[dataIndex],\n        });\n    };\n\n    const save = async (e) => {\n        try {\n            const values = await form.validateFields();\n            toggleEdit();\n            handleSave({ ...record, ...values });\n        } catch (errInfo) {\n            console.log(\"Save failed:\", errInfo);\n        }\n    };\n\n    let childNode = children;\n\n    if (editable && !record.header) {\n        childNode = editing ? (\n            <Form.Item\n                style={{\n                    margin: 0,\n                }}\n                name={dataIndex}\n                rules={[\n                    {\n                        required: true,\n                        message: `${title} is required.`,\n                    },\n                ]}\n            >\n                {inputRef === \"number\" ? (\n                    <InputNumber ref={inputRef} onPressEnter={save} onBlur={save} />\n                ) : (\n                    <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n                )}\n            </Form.Item>\n        ) : (\n            <div\n                className=\"editable-cell-value-wrap\"\n                style={{\n                    paddingRight: 24,\n                }}\n                onClick={toggleEdit}\n            >\n                {children}\n            </div>\n        );\n    } else if (\n        record &&\n        record.header &&\n        record.children.length > 0 &&\n        (dataIndex === \"quantity\" || dataIndex === \"total\")\n    ) {\n        const total = record.children\n            .map((el) => Number.parseFloat(el[dataIndex]))\n            .reduce((accu, curr) => accu + curr);\n        childNode = <Text strong>{total}</Text>;\n    }\n\n    return <td {...restProps}>{childNode}</td>;\n};\n\nexport default class BudgetPage extends Component {\n    constructor(props) {\n        super(props);\n        this.addWrapper = React.createRef();\n\n        let newObj = this.props.pageData.items[0];\n        const columnNames = Object.keys(newObj).filter(\n            (key) =>\n                key !== \"key\" &&\n                key !== \"children\" &&\n                key !== \"header\" &&\n                key !== \"childCount\"\n        );\n        this.columns = columnNames.map((key) => ({\n            title: capitalize(key),\n            dataIndex: key,\n            inputType: key === \"name\" ? \"text\" : \"number\",\n            editable: true,\n            key: key,\n        }));\n        this.columns.push(\n            {\n                title: \"Total\",\n                dataIndex: \"total\",\n                render: (text, record) => {\n                    if (!record.header) {\n                        let total =\n                            Number.parseInt(record.quantity) *\n                            Number.parseFloat(record.rate);\n                        if (isNaN(total)) total = 0;\n                        return `$${total.toFixed(2)}`;\n                    } else {\n                        let total = record.children\n                            .map((el) => {\n                                if (\n                                    !isNaN(Number.parseInt(el.quantity)) &&\n                                    !isNaN(Number.parseFloat(el.rate))\n                                ) {\n                                    return (\n                                        Number.parseInt(el.quantity) *\n                                        Number.parseFloat(el.rate)\n                                    );\n                                } else return 0;\n                            })\n                            .reduce((acc, curr) => acc + curr, 0);\n                        return <Text strong>{total.toFixed(2)}</Text>;\n                    }\n                },\n            },\n            {\n                title: \"operation\",\n                dataIndex: \"operation\",\n                render: (text, record) =>\n                    this.props.pageData.items.length >= 1 ? (\n                        <>\n                            {record.header ? (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() => this.handleAddChild(record.key)}\n                                >\n                                    Add\n                                </Button>\n                            ) : (\n                                <Popconfirm\n                                    title=\"Sure to delete?\"\n                                    onConfirm={() => this.handleDelete(record.key)}\n                                >\n                                    <Button type=\"link\">Delete</Button>\n                                </Popconfirm>\n                            )}\n                            {record.edit !== undefined && record.edit && (\n                                <Popconfirm\n                                    title=\"Sure to delete?\"\n                                    onConfirm={() => this.handleDelete(record.key)}\n                                >\n                                    <Button type=\"link\">Delete</Button>\n                                </Popconfirm>\n                            )}\n                        </>\n                    ) : null,\n            }\n        );\n    }\n\n    // Only drawback is that you can only have at most 26 main sections per page\n    // keys are: section is [a-z] and subsection is matching [a-z] with [0-9]+ appended\n    handleDelete = (key) => {\n        let newPageItems = this.props.pageData.items;\n        const index = newPageItems.findIndex((item) => item.key === key.charAt(0));\n        if (key.length > 1)\n            newPageItems[index].children = newPageItems[index].children.filter(\n                (item) => item.key !== key\n            );\n        else newPageItems = newPageItems.filter((item) => item.key !== key);\n        this.props.setPageData(newPageItems);\n    };\n\n    handleAdd = () => {\n        const { pageData } = this.props;\n        const count = pageData.items.length + 1;\n        const newData = {\n            key: String.fromCharCode(96 + count),\n            name: `${pageData.label} Item ${count}`,\n            quantity: null,\n            rate: null,\n            header: true,\n            edit: true,\n            childCount: 0,\n            children: [],\n        };\n        this.props.setPageData([...pageData.items, newData]);\n    };\n\n    handleAddChild = (key) => {\n        const pageItems = this.props.pageData.items;\n        const index = pageItems.findIndex((item) => item.key === key);\n        if (index < 0) {\n            return;\n        }\n        const count = pageItems[index].childCount + 1;\n        pageItems[index].childCount = count;\n        pageItems[index].children.push({\n            key: key + count,\n            name: `Item ${count}`,\n            quantity: 0,\n            rate: 0,\n            header: false,\n        });\n        this.props.setPageData(pageItems);\n    };\n\n    handleSave = (row) => {\n        const newData = [...this.props.pageData.items];\n        const hIndex = newData.findIndex((item) => row.key.charAt(0) === item.key);\n        const item = newData[hIndex];\n        if (row.header === undefined || !row.header) {\n            const cIndex = newData[hIndex].children.findIndex(\n                (item) => row.key === item.key\n            );\n            const child = newData[hIndex].children[cIndex];\n            newData[hIndex].children.splice(cIndex, 1, {\n                ...child,\n                ...row,\n            });\n        } else {\n            newData.splice(hIndex, 1, { ...item, ...row });\n        }\n        this.props.setPageData(newData);\n    };\n\n    render() {\n        const { pageData } = this.props;\n        const components = {\n            body: {\n                row: EditableRow,\n                cell: EditableCell,\n            },\n        };\n        const columns = this.columns.map((col) => {\n            if (!col.editable) {\n                return col;\n            }\n\n            return {\n                ...col,\n                onCell: (record) => ({\n                    record,\n                    editable: col.editable,\n                    dataIndex: col.dataIndex,\n                    title: col.title,\n                    handleSave: this.handleSave,\n                }),\n            };\n        });\n        return (\n            <div className={styles.content}>\n                <Title>{this.props.pageData.label}</Title>\n                <Button\n                    onClick={this.handleAdd}\n                    type=\"primary\"\n                    style={{\n                        marginBottom: 16,\n                    }}\n                    ref={this.addWrapper}\n                >\n                    Add a Section\n                </Button>\n                <Table\n                    components={components}\n                    rowClassName={() => \"editable-row\"}\n                    bordered\n                    dataSource={pageData.items}\n                    columns={columns}\n                    summary={(pageData) => {\n                        const total = pageData\n                            .map((el) =>\n                                el.children\n                                    .map(\n                                        (c) =>\n                                            Number.parseInt(c.quantity) *\n                                            Number.parseFloat(c.rate)\n                                    )\n                                    .reduce((acc, curr) => acc + curr, 0)\n                            )\n                            .reduce((acc, curr) => acc + curr, 0);\n                        return (\n                            <Table.Summary.Row>\n                                <Table.Summary.Cell>Total</Table.Summary.Cell>\n                                <Table.Summary.Cell></Table.Summary.Cell>\n                                <Table.Summary.Cell></Table.Summary.Cell>\n                                <Table.Summary.Cell>\n                                    <Text\n                                        style={{ fontWeight: \"bolder\" }}\n                                    >{`$${total.toFixed(2)}`}</Text>\n                                </Table.Summary.Cell>\n                            </Table.Summary.Row>\n                        );\n                    }}\n                />\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport ExportCSV from \"../../components/ExportCSV\";\nimport BudgetSteps from \"../../components/BudgetSteps\";\nimport BudgetPage from \"../BudgetPage\";\n\nimport styles from \"./Main.module.scss\";\nimport { Layout, Col, Row } from \"antd\";\nconst { Content } = Layout;\n\nexport default function Main(props) {\n    const setPageData = (pageData) => {\n        const newData = [...props.data];\n        newData[props.step].items = pageData;\n        props.setData(newData);\n    };\n    return (\n        <Content>\n            <Row className={styles.row}>\n                <Col\n                    span={5}\n                    pull={5}\n                    style={{\n                        height: \"100vh\",\n                        position: \"fixed\",\n                        left: 0,\n                        backgroundColor: \"white\",\n                        top: \"64px\",\n                        zIndex: 2,\n                        minWidth: \"17px\",\n                    }}\n                >\n                    <BudgetSteps onChange={props.onChange} page={props.step} />\n                </Col>\n                <Col span={19} push={5} style={{ textAlign: \"center\" }}>\n                    <BudgetPage\n                        pageData={props.data[props.step]}\n                        step={props.step}\n                        setPageData={setPageData}\n                    />\n                    {props.step + 1 === props.data.length && (\n                        <ExportCSV csvData={props.data} fileName={\"Pricing and Budget\"} />\n                    )}\n                </Col>\n            </Row>\n        </Content>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Main from \"./pages/Main\";\nimport { Layout } from \"antd\";\nconst { Header } = Layout;\n\nlet defaultData = require(\"./utils/default.json\");\nconst useSessionState = (storageKey) => {\n    const [data, setData] = useState(\n        JSON.parse(sessionStorage.getItem(storageKey)) || defaultData\n    );\n    useEffect(() => {\n        const stringData = JSON.stringify(data);\n        sessionStorage.setItem(storageKey, stringData);\n    }, [data, storageKey]);\n    return [data, setData];\n};\n\nfunction App() {\n    const [step, setStep] = useState(0);\n    const onChange = (current) => setStep(current);\n    const [data, setData] = useSessionState(\"VLProjectBudget\");\n    return (\n        <Layout>\n            <Header\n                style={{\n                    position: \"fixed\",\n                    zIndex: 2,\n                    width: \"100%\",\n                    textAlign: \"center\",\n                }}\n            >\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </Header>\n            <Layout>\n                <Main step={step} data={data} setData={setData} onChange={onChange} />\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}