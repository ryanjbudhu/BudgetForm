{"version":3,"sources":["logo.svg","components/BudgetSteps/BudgetSteps.module.scss","pages/BudgetPage/BudgetPage.module.scss","pages/Main/Main.module.scss","components/ExportCSV.js","components/BudgetSteps/BudgetSteps.js","pages/BudgetPage/BudgetPage.js","pages/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ExportCSV","csvData","fileName","type","onClick","e","wb","Sheets","data","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","Step","Steps","BudgetSteps","props","direction","current","page","onChange","className","styles","stepsParent","title","icon","UserOutlined","ToolOutlined","UsergroupAddOutlined","DollarOutlined","BankOutlined","EditableContext","React","createContext","EditableRow","index","Form","useForm","form","component","Provider","value","EditableCell","editable","children","dataIndex","record","handleSave","restProps","inputType","useState","editing","setEditing","inputRef","useRef","useContext","useEffect","focus","toggleEdit","setFieldsValue","save","a","validateFields","values","console","log","childNode","Item","style","margin","name","rules","required","message","ref","onPressEnter","onBlur","paddingRight","BudgetPage","handleDelete","key","newPageItems","pageData","items","findIndex","item","charAt","filter","setPageData","handleAdd","count","length","newData","quantity","rate","header","childCount","handleAddChild","pageItems","push","row","hIndex","undefined","splice","cIndex","child","addWrapper","createRef","newObj","columnNames","Object","keys","columns","map","tocap","toUpperCase","slice","render","text","onConfirm","this","components","body","cell","col","onCell","content","label","marginBottom","rowClassName","bordered","dataSource","Component","Content","Layout","Main","span","pull","height","position","left","backgroundColor","top","zIndex","minWidth","step","textAlign","setData","Header","defaultData","require","App","setStep","storageKey","JSON","parse","sessionStorage","getItem","stringData","stringify","setItem","useSessionState","width","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ea69d836.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stepsParent\":\"BudgetSteps_stepsParent__CZ_V4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"BudgetPage_content__2lFbs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Main_row__O0Ybk\"};","import React from \"react\";\nimport { Button } from \"antd\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nconst ExportCSV = ({ csvData, fileName }) => {\n    const fileType =\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".xlsx\";\n\n    const exportToCSV = (csvData, fileName) => {\n        const ws = XLSX.utils.json_to_sheet(csvData);\n        const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    return (\n        <Button type=\"primary\" onClick={(e) => exportToCSV(csvData, fileName)}>\n            Export\n        </Button>\n    );\n};\n\nexport default ExportCSV;\n","import React from \"react\";\nimport { Steps } from \"antd\";\nimport {\n    UserOutlined,\n    ToolOutlined,\n    UsergroupAddOutlined,\n    DollarOutlined,\n    BankOutlined,\n} from \"@ant-design/icons\";\nimport styles from \"./BudgetSteps.module.scss\";\n\nconst { Step } = Steps;\n\nexport default function BudgetSteps(props) {\n    return (\n        <Steps\n            direction=\"vertical\"\n            current={props.page}\n            onChange={props.onChange}\n            className={styles.stepsParent}\n        >\n            <Step title=\"Labor\" icon={<UserOutlined />} />\n            <Step title=\"Equiptment and Supplies\" icon={<ToolOutlined />} />\n            <Step title=\"Consultants\" icon={<UsergroupAddOutlined />} />\n            <Step title=\"Non-Personnel Expenses\" icon={<DollarOutlined />} />\n            <Step title=\"Overhead\" icon={<BankOutlined />} />\n        </Steps>\n    );\n}\n","import React, { Component, useContext, useState, useEffect, useRef } from \"react\";\nimport styles from \"./BudgetPage.module.scss\";\n\nimport { Table, Input, InputNumber, Popconfirm, Form, Button } from \"antd\";\n\nconst capitalize = (tocap) => tocap.charAt(0).toUpperCase() + tocap.slice(1);\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ index, ...props }) => {\n    const [form] = Form.useForm();\n    return (\n        <Form form={form} component={false}>\n            <EditableContext.Provider value={form}>\n                <tr {...props} />\n            </EditableContext.Provider>\n        </Form>\n    );\n};\n\nconst EditableCell = ({\n    title,\n    editable,\n    children,\n    dataIndex,\n    record,\n    handleSave,\n    inputType,\n    ...restProps\n}) => {\n    const [editing, setEditing] = useState(false);\n    const inputRef = useRef();\n    const form = useContext(EditableContext);\n    useEffect(() => {\n        if (editing) {\n            inputRef.current.focus();\n        }\n    }, [editing]);\n\n    const toggleEdit = () => {\n        setEditing(!editing);\n        form.setFieldsValue({\n            [dataIndex]: record[dataIndex],\n        });\n    };\n\n    const save = async (e) => {\n        try {\n            const values = await form.validateFields();\n            toggleEdit();\n            handleSave({ ...record, ...values });\n        } catch (errInfo) {\n            console.log(\"Save failed:\", errInfo);\n        }\n    };\n\n    let childNode = children;\n\n    if (editable) {\n        childNode = editing ? (\n            <Form.Item\n                style={{\n                    margin: 0,\n                }}\n                name={dataIndex}\n                rules={[\n                    {\n                        required: true,\n                        message: `${title} is required.`,\n                    },\n                ]}\n            >\n                {inputRef === \"number\" ? (\n                    <InputNumber ref={inputRef} onPressEnter={save} onBlur={save} />\n                ) : (\n                    <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n                )}\n            </Form.Item>\n        ) : (\n            <div\n                className=\"editable-cell-value-wrap\"\n                style={{\n                    paddingRight: 24,\n                }}\n                onClick={toggleEdit}\n            >\n                {children}\n            </div>\n        );\n    }\n\n    return <td {...restProps}>{childNode}</td>;\n};\n\nexport default class BudgetPage extends Component {\n    constructor(props) {\n        super(props);\n        this.addWrapper = React.createRef();\n\n        let newObj = this.props.pageData.items[0];\n        const columnNames = Object.keys(newObj).filter(\n            (key) =>\n                key !== \"key\" &&\n                key !== \"children\" &&\n                key !== \"header\" &&\n                key !== \"childCount\"\n        );\n        this.columns = columnNames.map((key) => ({\n            title: capitalize(key),\n            dataIndex: key,\n            inputType: key === \"name\" ? \"text\" : \"number\",\n            editable: true,\n            key: key,\n        }));\n        this.columns.push({\n            title: \"operation\",\n            dataIndex: \"operation\",\n            render: (text, record) =>\n                this.props.pageData.items.length >= 1 ? (\n                    <>\n                        {record.header ? (\n                            <Button\n                                type=\"link\"\n                                onClick={() => this.handleAddChild(record.key)}\n                            >\n                                Add\n                            </Button>\n                        ) : (\n                            <Popconfirm\n                                title=\"Sure to delete?\"\n                                onConfirm={() => this.handleDelete(record.key)}\n                            >\n                                <Button type=\"link\">Delete</Button>\n                            </Popconfirm>\n                        )}\n                    </>\n                ) : null,\n        });\n    }\n\n    // Only drawback is that you can only have at most 26 main sections per page\n    // keys are: section is [a-z] and subsection is matching [a-z] with [0-9]+ appended\n    handleDelete = (key) => {\n        let newPageItems = this.props.pageData.items;\n        const index = newPageItems.findIndex((item) => item.key === key.charAt(0));\n        newPageItems[index].children = newPageItems[index].children.filter(\n            (item) => item.key !== key\n        );\n        this.props.setPageData(newPageItems);\n    };\n\n    handleAdd = () => {\n        const { pageData } = this.props;\n        const count = pageData.items.length;\n        const newData = {\n            key: count,\n            name: `Item ${count}`,\n            quantity: 0,\n            rate: 0,\n            header: true,\n            childCount: 0,\n        };\n        this.props.setPageData([...pageData.items, newData]);\n    };\n\n    handleAddChild = (key) => {\n        const pageItems = this.props.pageData.items;\n        const index = pageItems.findIndex((item) => item.key === key);\n        if (index < 0) {\n            return;\n        }\n        const count = pageItems[index].childCount + 1;\n        pageItems[index].childCount = count;\n        pageItems[index].children.push({\n            key: key + count,\n            name: `Item ${count}`,\n            quantity: 0,\n            rate: 0,\n            header: false,\n        });\n        this.props.setPageData(pageItems);\n    };\n\n    handleSave = (row) => {\n        const newData = [...this.props.pageData.items];\n        const hIndex = newData.findIndex((item) => row.key.charAt(0) === item.key);\n        const item = newData[hIndex];\n        if (row.header === undefined || !row.header) {\n            const cIndex = newData[hIndex].children.findIndex(\n                (item) => row.key === item.key\n            );\n            const child = newData[hIndex].children[cIndex];\n            newData[hIndex].children.splice(cIndex, 1, {\n                ...child,\n                ...row,\n            });\n            console.log(newData[hIndex]);\n        } else {\n            newData.splice(hIndex, 1, { ...item, ...row });\n        }\n        this.props.setPageData(newData);\n    };\n\n    render() {\n        const { pageData } = this.props;\n        const components = {\n            body: {\n                row: EditableRow,\n                cell: EditableCell,\n            },\n        };\n        const columns = this.columns.map((col) => {\n            if (!col.editable) {\n                return col;\n            }\n\n            return {\n                ...col,\n                onCell: (record) => ({\n                    record,\n                    editable: col.editable,\n                    dataIndex: col.dataIndex,\n                    title: col.title,\n                    handleSave: this.handleSave,\n                }),\n            };\n        });\n        return (\n            <div className={styles.content}>\n                <h1>{this.props.pageData.label}</h1>\n                <Button\n                    onClick={this.handleAdd}\n                    type=\"primary\"\n                    style={{\n                        marginBottom: 16,\n                    }}\n                    ref={this.addWrapper}\n                >\n                    Add a row\n                </Button>\n                <Table\n                    components={components}\n                    rowClassName={() => \"editable-row\"}\n                    bordered\n                    dataSource={pageData.items}\n                    columns={columns}\n                />\n            </div>\n        );\n    }\n}\n\n// export default function BudgetPage(props) {\n//     console.log(props.data[props.step]);\n\n//     const [form] = Form.useForm();\n//     // const [data, setData] = useState(props);\n//     const [editingKey, setEditingKey] = useState(\"\");\n\n//     const isEditing = (record) => record.key === editingKey;\n\n//     let columnFieldsValues = {};\n//     columnNames.forEach((name) => (columnFieldsValues[name] = \"\"));\n\n//     const edit = (record) => {\n//         form.setFieldsValue({\n//             columnFieldsValues,\n//             ...record,\n//         });\n//         setEditingKey(record.key);\n//     };\n\n//     const cancel = () => {\n//         setEditingKey(\"\");\n//     };\n\n//     const save = async (key) => {\n//         try {\n//             const row = await form.validateFields();\n//             const newData = [...props.data[props.step]];\n//             const index = newData.findIndex((item) => key === item.key);\n\n//             if (index > -1) {\n//                 const item = newData[index];\n//                 newData.splice(index, 1, { ...item, ...row });\n//                 props.setData(newData);\n//                 setEditingKey(\"\");\n//             } else {\n//                 newData.push(row);\n//                 props.setData(newData);\n//                 setEditingKey(\"\");\n//             }\n//         } catch (errInfo) {\n//             console.log(\"Validate Failed:\", errInfo);\n//         }\n//     };\n\n//     columns.push({\n//         title: \"operation\",\n//         dataIndex: \"operation\",\n//         render: (_, record) => {\n//             const editable = isEditing(record);\n//             return editable ? (\n//                 <span>\n//                     <Button\n//                         type=\"primary\"\n//                         onClick={() => save(record.key)}\n//                         style={{\n//                             marginRight: 8,\n//                         }}\n//                     >\n//                         Save\n//                     </Button>\n//                     <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\n//                         <Button type=\"link\">Cancel</Button>\n//                     </Popconfirm>\n//                 </span>\n//             ) : (\n//                 <Button\n//                     type=\"link\"\n//                     disabled={editingKey !== \"\"}\n//                     onClick={() => edit(record)}\n//                 >\n//                     Edit\n//                 </Button>\n//             );\n//         },\n//     });\n//     console.log(columns);\n//     return (\n//         <div className={styles.content}>\n//             <h1>{props.data[props.step].label}</h1>\n//             <Form form={form} component={false}>\n//                 <Table\n//                     components={{\n//                         body: {\n//                             cell: EditableCell,\n//                         },\n//                     }}\n//                     bordered\n//                     dataSource={props.data[props.step].items}\n//                     columns={columns}\n//                     summary={(items) => {\n//                         let total = 0;\n//                         items.forEach((item) => {});\n//                     }}\n//                 ></Table>\n//             </Form>\n//         </div>\n//     );\n// }\n","import React from \"react\";\n\nimport ExportCSV from \"../../components/ExportCSV\";\nimport BudgetSteps from \"../../components/BudgetSteps\";\nimport BudgetPage from \"../BudgetPage\";\n\nimport styles from \"./Main.module.scss\";\nimport { Layout, Col, Row } from \"antd\";\nconst { Content } = Layout;\n\nexport default function Main(props) {\n    const setPageData = (pageData) => {\n        const newData = [...props.data];\n        newData[props.step].items = pageData;\n        props.setData(newData);\n    };\n    return (\n        <Content>\n            <Row className={styles.row}>\n                <Col\n                    span={5}\n                    pull={5}\n                    style={{\n                        height: \"100vh\",\n                        position: \"fixed\",\n                        left: 0,\n                        backgroundColor: \"white\",\n                        top: \"64px\",\n                        zIndex: 2,\n                        minWidth: \"17px\",\n                    }}\n                >\n                    <BudgetSteps onChange={props.onChange} page={props.step} />\n                </Col>\n                <Col span={19} push={5} style={{ textAlign: \"center\" }}>\n                    <BudgetPage\n                        pageData={props.data[props.step]}\n                        step={props.step}\n                        setPageData={setPageData}\n                    />\n                    {props.step + 1 === props.data.length && (\n                        <ExportCSV csvData={props.data} fileName={\"Pricing and Budget\"} />\n                    )}\n                </Col>\n            </Row>\n        </Content>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Main from \"./pages/Main\";\nimport { Layout } from \"antd\";\nconst { Header } = Layout;\n\nlet defaultData = require(\"./utils/default.json\");\nconst useSessionState = (storageKey) => {\n    const [data, setData] = useState(\n        JSON.parse(sessionStorage.getItem(storageKey)) || defaultData\n    );\n    useEffect(() => {\n        const stringData = JSON.stringify(data);\n        sessionStorage.setItem(storageKey, stringData);\n    }, [data, storageKey]);\n    return [data, setData];\n};\n\nfunction App() {\n    const [step, setStep] = useState(0);\n    const onChange = (current) => setStep(current);\n    const [data, setData] = useSessionState(\"VLProjectBudget\");\n    return (\n        <Layout>\n            <Header\n                style={{\n                    position: \"fixed\",\n                    zIndex: 2,\n                    width: \"100%\",\n                    textAlign: \"center\",\n                }}\n            >\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </Header>\n            <Layout>\n                <Main step={step} data={data} setData={setData} onChange={onChange} />\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}