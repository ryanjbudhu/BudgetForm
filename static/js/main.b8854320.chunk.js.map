{"version":3,"sources":["pages/Main/Main.module.scss","logo.svg","components/BudgetSteps/BudgetSteps.module.scss","pages/BudgetPage/BudgetPage.module.scss","components/ExportCSV.js","components/BudgetSteps/BudgetSteps.js","pages/BudgetPage/BudgetPage.js","pages/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ExportCSV","csvData","fileName","getEachTypeSheet","data","sheets","forEach","pageObj","getPageData","sheetTotal","sheetData","push","pagename","label","total","sheetName","getChildren","htotal","headers","items","header","headerObj","childObj","name","quantity","rate","children","child","Number","parseInt","parseFloat","length","undefined","getOverviewSheet","arrData","pageTotal","pageData","concat","toFixed","type","onClick","e","convertedData","pages","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","pageSheet","excelBuffer","bookType","Blob","FileSaver","exportToCSV","Step","Steps","BudgetSteps","props","direction","current","page","onChange","className","styles","stepsParent","title","icon","UserOutlined","ToolOutlined","UsergroupAddOutlined","DollarOutlined","BankOutlined","Title","Typography","Text","EditableContext","React","createContext","EditableRow","index","Form","useForm","form","component","Provider","value","EditableCell","editable","dataIndex","record","handleSave","inputType","restProps","useState","editing","setEditing","inputRef","useRef","useContext","useEffect","focus","toggleEdit","setFieldsValue","save","a","validateFields","values","console","log","childNode","edit","Item","style","margin","rules","required","message","ref","onPressEnter","onBlur","paddingRight","Intl","NumberFormat","currency","format","map","el","reduce","accu","curr","strong","BudgetPage","handleDelete","key","newPageItems","findIndex","item","charAt","filter","dispatch","step","handleAdd","count","newData","String","fromCharCode","childCount","handleAddChild","pageItems","row","hIndex","splice","cIndex","addWrapper","createRef","newObj","columnNames","Object","keys","columns","tocap","toUpperCase","slice","render","text","isNaN","acc","onConfirm","this","components","body","cell","col","onCell","content","marginTop","marginBottom","rowClassName","bordered","dataSource","expandable","defaultExpandAllRows","pagination","hideOnSinglePage","summary","c","Summary","Row","Cell","fontWeight","Component","Content","Layout","Main","span","pull","textAlign","align","Header","defaultData","require","reducer","state","action","info","dataItem","infoData","Error","App","setStep","localState","JSON","parse","localStorage","getItem","useReducer","setItem","stringify","position","zIndex","width","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.b8854320.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Main_row__O0Ybk\",\"col\":\"Main_col__3wFmk\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stepsParent\":\"BudgetSteps_stepsParent__CZ_V4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"BudgetPage_content__2lFbs\"};","import React from \"react\";\nimport { Button } from \"antd\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nconst ExportCSV = ({ csvData, fileName }) => {\n    const fileType =\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".xlsx\";\n\n    // TODO: format the excel to look nice\n\n    const exportToCSV = (csvData, fileName) => {\n        const convertedData = getOverviewSheet(csvData.pages);\n        const ws = XLSX.utils.json_to_sheet(convertedData);\n        let wb = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(wb, ws, \"Overview\");\n\n        const detailedSheets = getEachTypeSheet(csvData);\n        detailedSheets.forEach(({ sheetName, sheetData }) => {\n            const pageSheet = XLSX.utils.json_to_sheet(sheetData);\n            XLSX.utils.book_append_sheet(wb, pageSheet, sheetName);\n        });\n\n        const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    const getEachTypeSheet = (data) => {\n        let sheets = [];\n        data.forEach((pageObj) => {\n            let [sheetTotal, sheetData] = getPageData(pageObj, true);\n            sheetData.push({ pagename: `Total ${pageObj.label}`, total: sheetTotal });\n            sheets.push({\n                sheetName: pageObj.label,\n                sheetData: sheetData,\n            });\n        });\n\n        return sheets;\n    };\n\n    const getPageData = (pageObj, getChildren) => {\n        let htotal = 0;\n        let headers = [];\n        pageObj.items.forEach((header) => {\n            let headerObj;\n            if (getChildren) headerObj = { pagename: `Total ${header.name}` };\n            else headerObj = { pagename: header.name };\n            let childObj;\n            headerObj.quantity = 0;\n            headerObj.rate = 0;\n            headerObj.total = 0;\n            header.children.forEach((child) => {\n                childObj = {\n                    pagename: child.name,\n                    quantity: child.quantity,\n                    rate: child.rate,\n                    total:\n                        Number.parseInt(child.quantity) * Number.parseFloat(child.rate),\n                };\n                headerObj.quantity += Number.parseInt(child.quantity);\n                headerObj.rate += Number.parseFloat(child.rate);\n                headerObj.total += childObj.total;\n            });\n\n            if (header.children.length > 0) {\n                headerObj.rate = headerObj.rate / header.children.length;\n            }\n            htotal += headerObj.total;\n            if (getChildren && childObj !== undefined) {\n                headers.push([], childObj);\n            }\n            headers.push(headerObj);\n        });\n        return [htotal, headers];\n    };\n\n    const getOverviewSheet = (data) => {\n        let arrData = [[]];\n        let total = 0;\n        data.forEach((pageObj) => {\n            arrData.push([], { pagename: pageObj.label });\n            const [pageTotal, pageData] = getPageData(pageObj, false);\n            arrData = arrData.concat(pageData);\n            arrData.push({\n                pagename: `Total ${pageObj.label}`,\n                total: pageTotal.toFixed(2),\n            });\n            arrData.push([]);\n            total += pageTotal;\n        });\n        arrData.push([], { pagename: \"Total\", total: total.toFixed(2) });\n        return arrData;\n    };\n\n    return (\n        <Button type=\"primary\" onClick={(e) => exportToCSV(csvData, fileName)}>\n            Export\n        </Button>\n    );\n};\n\nexport default ExportCSV;\n","import React from \"react\";\nimport { Steps } from \"antd\";\nimport {\n    UserOutlined,\n    ToolOutlined,\n    UsergroupAddOutlined,\n    DollarOutlined,\n    BankOutlined,\n} from \"@ant-design/icons\";\nimport styles from \"./BudgetSteps.module.scss\";\n\nconst { Step } = Steps;\n\nexport default function BudgetSteps(props) {\n    return (\n        <Steps\n            direction=\"vertical\"\n            current={props.page}\n            onChange={props.onChange}\n            className={styles.stepsParent}\n        >\n            <Step title=\"Labor\" icon={<UserOutlined />} />\n            <Step title=\"Equiptment and Supplies\" icon={<ToolOutlined />} />\n            <Step title=\"Consultants\" icon={<UsergroupAddOutlined />} />\n            <Step title=\"Non-Personnel Expenses\" icon={<DollarOutlined />} />\n            <Step title=\"Overhead\" icon={<BankOutlined />} />\n        </Steps>\n    );\n}\n","import React, { Component, useContext, useState, useEffect, useRef } from \"react\";\nimport styles from \"./BudgetPage.module.scss\";\n\nimport { Table, Input, InputNumber, Popconfirm, Form, Button, Typography } from \"antd\";\nconst { Title, Text } = Typography;\n\nconst capitalize = (tocap) => tocap.charAt(0).toUpperCase() + tocap.slice(1);\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ index, ...props }) => {\n    const [form] = Form.useForm();\n    return (\n        <Form form={form} component={false}>\n            <EditableContext.Provider value={form}>\n                <tr {...props} />\n            </EditableContext.Provider>\n        </Form>\n    );\n};\n\nconst EditableCell = ({\n    title,\n    editable,\n    children,\n    dataIndex,\n    record,\n    handleSave,\n    inputType,\n    ...restProps\n}) => {\n    const [editing, setEditing] = useState(false);\n    const inputRef = useRef();\n    const form = useContext(EditableContext);\n    useEffect(() => {\n        if (editing) {\n            inputRef.current.focus();\n        }\n    }, [editing]);\n\n    const toggleEdit = () => {\n        setEditing(!editing);\n        form.setFieldsValue({\n            [dataIndex]: record[dataIndex],\n        });\n    };\n\n    const save = async (e) => {\n        try {\n            const values = await form.validateFields();\n            toggleEdit();\n            handleSave({ ...record, ...values });\n        } catch (errInfo) {\n            console.log(\"Save failed:\", errInfo);\n        }\n    };\n\n    let childNode = children;\n\n    if (editable && (!record.header || (record.edit && dataIndex === \"name\"))) {\n        childNode = editing ? (\n            <Form.Item\n                style={{\n                    margin: 0,\n                }}\n                name={dataIndex}\n                rules={[\n                    {\n                        required: true,\n                        message: `${title} is required.`,\n                    },\n                ]}\n            >\n                {inputType === \"number\" ? (\n                    <InputNumber ref={inputRef} onPressEnter={save} onBlur={save} />\n                ) : (\n                    <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n                )}\n            </Form.Item>\n        ) : (\n            <div\n                className=\"editable-cell-value-wrap\"\n                style={{\n                    paddingRight: 24,\n                }}\n                onClick={toggleEdit}\n            >\n                {dataIndex === \"rate\"\n                    ? new Intl.NumberFormat(\"en-US\", {\n                          style: \"currency\",\n                          currency: \"USD\",\n                      }).format(Number.parseFloat(children[1]))\n                    : children}\n            </div>\n        );\n    } else if (\n        record &&\n        record.header &&\n        record.children.length > 0 &&\n        dataIndex === \"rate\"\n    ) {\n        const total = record.children\n            .map((el) => Number.parseFloat(el[dataIndex]))\n            .reduce((accu, curr) => accu + curr);\n        childNode = (\n            <Text strong>\n                {new Intl.NumberFormat(\"en-US\", {\n                    style: \"currency\",\n                    currency: \"USD\",\n                }).format(total / record.children.length)}\n            </Text>\n        );\n    } else if (\n        record &&\n        record.header &&\n        record.children.length > 0 &&\n        (dataIndex === \"quantity\" || dataIndex === \"total\")\n    ) {\n        const total = record.children\n            .map((el) => Number.parseFloat(el[dataIndex]))\n            .reduce((accu, curr) => accu + curr);\n        childNode = <Text strong>{total}</Text>;\n    }\n\n    return <td {...restProps}>{childNode}</td>;\n};\n\nexport default class BudgetPage extends Component {\n    constructor(props) {\n        super(props);\n        this.addWrapper = React.createRef();\n\n        let newObj = this.props.pageData.items[0];\n        const columnNames = Object.keys(newObj).filter(\n            (key) =>\n                key !== \"key\" &&\n                key !== \"children\" &&\n                key !== \"header\" &&\n                key !== \"childCount\"\n        );\n        this.columns = columnNames.map((key) => ({\n            title: capitalize(key),\n            dataIndex: key,\n            inputType: key === \"name\" ? \"text\" : \"number\",\n            editable: true,\n            key: key,\n        }));\n        this.columns.push(\n            {\n                title: \"Total\",\n                dataIndex: \"total\",\n                render: (text, record) => {\n                    if (!record.header) {\n                        let total =\n                            Number.parseInt(record.quantity) *\n                            Number.parseFloat(record.rate);\n                        if (isNaN(total)) total = 0;\n                        return new Intl.NumberFormat(\"en-US\", {\n                            style: \"currency\",\n                            currency: \"USD\",\n                        }).format(total);\n                    } else {\n                        let total = record.children\n                            .map((el) => {\n                                if (\n                                    !isNaN(Number.parseInt(el.quantity)) &&\n                                    !isNaN(Number.parseFloat(el.rate))\n                                ) {\n                                    return (\n                                        Number.parseInt(el.quantity) *\n                                        Number.parseFloat(el.rate)\n                                    );\n                                } else return 0;\n                            })\n                            .reduce((acc, curr) => acc + curr, 0);\n                        return (\n                            <Text strong>\n                                {new Intl.NumberFormat(\"en-US\", {\n                                    style: \"currency\",\n                                    currency: \"USD\",\n                                }).format(total)}\n                            </Text>\n                        );\n                    }\n                },\n            },\n            {\n                title: \"operation\",\n                dataIndex: \"operation\",\n                render: (text, record) =>\n                    this.props.pageData.items.length >= 1 ? (\n                        <>\n                            {record.header ? (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() => this.handleAddChild(record.key)}\n                                >\n                                    Add\n                                </Button>\n                            ) : (\n                                <Popconfirm\n                                    title=\"Sure to delete?\"\n                                    onConfirm={() => this.handleDelete(record.key)}\n                                >\n                                    <Button type=\"link\">Delete</Button>\n                                </Popconfirm>\n                            )}\n                            {record.edit !== undefined && record.edit && (\n                                <Popconfirm\n                                    title=\"Sure to delete?\"\n                                    onConfirm={() => this.handleDelete(record.key)}\n                                >\n                                    <Button type=\"link\">Delete</Button>\n                                </Popconfirm>\n                            )}\n                        </>\n                    ) : null,\n            }\n        );\n    }\n\n    // Only drawback is that you can only have at most 26 main sections per page\n    // keys are: section is [a-z] and subsection is matching [a-z] with [0-9]+ appended\n    handleDelete = (key) => {\n        let newPageItems = this.props.pageData.items;\n        const index = newPageItems.findIndex((item) => item.key === key.charAt(0));\n        if (key.length > 1)\n            newPageItems[index].children = newPageItems[index].children.filter(\n                (item) => item.key !== key\n            );\n        else newPageItems = newPageItems.filter((item) => item.key !== key);\n        // this.props.setPageData(newPageItems);\n        this.props.dispatch({\n            type: \"page\",\n            step: this.props.step,\n            pageData: newPageItems,\n        });\n    };\n\n    handleAdd = () => {\n        const { pageData } = this.props;\n        const count = pageData.items.length + 1;\n        const newData = {\n            key: String.fromCharCode(96 + count),\n            name: `${pageData.label} Item ${count}`,\n            quantity: null,\n            rate: null,\n            header: true,\n            edit: true,\n            childCount: 0,\n            children: [],\n        };\n        // this.props.setPageData([...pageData.items, newData]);\n        this.props.dispatch({\n            type: \"page\",\n            step: this.props.step,\n            pageData: [...pageData.items, newData],\n        });\n    };\n\n    handleAddChild = (key) => {\n        const pageItems = this.props.pageData.items;\n        const index = pageItems.findIndex((item) => item.key === key);\n        if (index < 0) {\n            return;\n        }\n        const count = pageItems[index].childCount + 1;\n        pageItems[index].childCount = count;\n        pageItems[index].children.push({\n            key: key + count,\n            name: `Item ${count}`,\n            quantity: 0,\n            rate: 0,\n            header: false,\n        });\n        //this.props.setPageData(pageItems);\n        this.props.dispatch({ type: \"page\", step: this.props.step, pageData: pageItems });\n    };\n\n    handleSave = (row) => {\n        const newData = [...this.props.pageData.items];\n        const hIndex = newData.findIndex((item) => row.key.charAt(0) === item.key);\n        const item = newData[hIndex];\n        if (row.header === undefined || !row.header) {\n            const cIndex = newData[hIndex].children.findIndex(\n                (item) => row.key === item.key\n            );\n            const child = newData[hIndex].children[cIndex];\n            newData[hIndex].children.splice(cIndex, 1, {\n                ...child,\n                ...row,\n            });\n        } else {\n            newData.splice(hIndex, 1, { ...item, ...row });\n        }\n        // this.props.setPageData(newData);\n        this.props.dispatch({ type: \"page\", step: this.props.step, pageData: newData });\n    };\n\n    render() {\n        const { pageData } = this.props;\n        const components = {\n            body: {\n                row: EditableRow,\n                cell: EditableCell,\n            },\n        };\n        const columns = this.columns.map((col) => {\n            if (!col.editable) {\n                return col;\n            }\n\n            return {\n                ...col,\n                onCell: (record) => ({\n                    record,\n                    editable: col.editable,\n                    dataIndex: col.dataIndex,\n                    title: col.title,\n                    inputType: col.inputType,\n                    handleSave: this.handleSave,\n                }),\n            };\n        });\n        return (\n            <div className={styles.content}>\n                <Title>{this.props.pageData.label}</Title>\n                <Button\n                    onClick={this.handleAdd}\n                    type=\"primary\"\n                    style={{\n                        marginTop: 24,\n                        marginBottom: 16,\n                    }}\n                    ref={this.addWrapper}\n                >\n                    Add a Section\n                </Button>\n                <Table\n                    components={components}\n                    rowClassName={() => \"editable-row\"}\n                    bordered\n                    dataSource={pageData.items}\n                    columns={columns}\n                    expandable={{ defaultExpandAllRows: true }}\n                    pagination={{ hideOnSinglePage: true }}\n                    summary={(pageData) => {\n                        const total = pageData\n                            .map((el) =>\n                                el.children\n                                    .map(\n                                        (c) =>\n                                            Number.parseInt(c.quantity) *\n                                            Number.parseFloat(c.rate)\n                                    )\n                                    .reduce((acc, curr) => acc + curr, 0)\n                            )\n                            .reduce((acc, curr) => acc + curr, 0);\n                        return (\n                            <Table.Summary.Row>\n                                <Table.Summary.Cell>Total</Table.Summary.Cell>\n                                <Table.Summary.Cell></Table.Summary.Cell>\n                                <Table.Summary.Cell></Table.Summary.Cell>\n                                <Table.Summary.Cell>\n                                    <Text\n                                        style={{\n                                            fontWeight: \"bolder\",\n                                        }}\n                                    >\n                                        {new Intl.NumberFormat(\"en-US\", {\n                                            style: \"currency\",\n                                            currency: \"USD\",\n                                        }).format(total)}\n                                    </Text>\n                                </Table.Summary.Cell>\n                            </Table.Summary.Row>\n                        );\n                    }}\n                />\n            </div>\n        );\n    }\n}\n","import React from \"react\";\n\nimport ExportCSV from \"../../components/ExportCSV\";\nimport BudgetSteps from \"../../components/BudgetSteps\";\nimport BudgetPage from \"../BudgetPage\";\n\nimport styles from \"./Main.module.scss\";\nimport { Layout, Col, Row, Button, Space, Popconfirm } from \"antd\";\nconst { Content } = Layout;\n\nexport default function Main(props) {\n    return (\n        <Content>\n            <Row className={styles.row}>\n                <Col span={5} pull={5} className={styles.col}>\n                    <BudgetSteps onChange={props.onChange} page={props.step} />\n                    <div style={{ textAlign: \"center\" }}>\n                        <Space align=\"center\" style={{ marginBottom: \"3rem\" }}>\n                            <ExportCSV\n                                csvData={props.data}\n                                fileName={\"Pricing and Budget\"}\n                            />\n                            <Popconfirm\n                                title=\"Sure to reset?\"\n                                onConfirm={() => props.dispatch({ type: \"reset\" })}\n                            >\n                                <Button type=\"ghost\">Reset</Button>\n                            </Popconfirm>\n                        </Space>\n                    </div>\n                </Col>\n                <Col span={19} push={5}>\n                    <BudgetPage\n                        pageData={props.data.pages[props.step]}\n                        step={props.step}\n                        dispatch={props.dispatch}\n                    />\n                </Col>\n            </Row>\n        </Content>\n    );\n}\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Main from \"./pages/Main\";\nimport { Layout } from \"antd\";\nconst { Header } = Layout;\n\nlet defaultData = require(\"./utils/default.json\");\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case \"page\": // action = {step, pageData}\n            const newData = [...state.pages];\n            newData[action.step].items = action.pageData;\n            return { ...state, pages: newData };\n        case \"info\": // action = {dataItem, infoData}\n            return {\n                ...state,\n                info: { ...state.info, [action.dataItem]: action.infoData },\n            };\n        case \"reset\":\n            return defaultData;\n        default:\n            throw new Error(\"Action of unknown type.\");\n    }\n}\n\n// TODO: change to useReducer and create reducer function\nfunction App() {\n    const [step, setStep] = useState(0);\n    const onChange = (current) => setStep(current);\n    const localState = JSON.parse(localStorage.getItem(\"VLProjectBudget\")) || defaultData;\n    const [data, dispatch] = useReducer(reducer, localState || defaultData);\n    useEffect(() => {\n        localStorage.setItem(\"VLProjectBudget\", JSON.stringify(data));\n    }, [data]);\n\n    return (\n        <Layout>\n            <Header\n                style={{\n                    position: \"fixed\",\n                    zIndex: 2,\n                    width: \"100%\",\n                    textAlign: \"center\",\n                }}\n            >\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </Header>\n            <Layout>\n                <Main step={step} data={data} dispatch={dispatch} onChange={onChange} />\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}