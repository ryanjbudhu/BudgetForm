{"version":3,"sources":["pages/BudgetInfo/BudgetInfo.module.scss","pages/Main/Main.module.scss","logo.svg","components/BudgetSteps/BudgetSteps.module.scss","pages/BudgetPage/BudgetPage.module.scss","components/ExportCSV.js","components/BudgetSteps/BudgetSteps.js","pages/BudgetPage/BudgetPage.js","pages/BudgetInfo/BudgetInfo.js","pages/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ExportCSV","csvData","fileName","getEachTypeSheet","data","sheets","forEach","pageObj","getPageData","sheetTotal","sheetData","push","pagename","label","total","sheetName","getChildren","htotal","headers","items","header","headerObj","childObj","name","quantity","rate","children","child","Number","parseInt","parseFloat","length","undefined","getOverviewSheet","arrData","pageTotal","pageData","concat","toFixed","type","onClick","e","convertedData","pages","ws","XLSX","json_to_sheet","wb","book_new","book_append_sheet","pageSheet","Custprops","Vendor","info","Project","project","Division","division","start","end","Grant","grant","Phone","phone","excelBuffer","bookType","Props","Author","contact","CreatedDate","Date","now","toString","Blob","FileSaver","exportToCSV","Step","Steps","BudgetSteps","props","direction","current","page","onChange","className","styles","stepsParent","title","icon","InfoCircleOutlined","UserOutlined","ToolOutlined","UsergroupAddOutlined","DollarOutlined","BankOutlined","Title","Typography","Text","TextArea","Input","EditableContext","React","createContext","EditableRow","index","Form","useForm","form","component","Provider","value","EditableCell","editable","dataIndex","record","handleSave","inputType","restProps","useState","editing","setEditing","inputRef","useRef","useContext","useEffect","focus","toggleEdit","setFieldsValue","save","a","validateFields","values","console","log","childNode","edit","Item","style","margin","rules","required","message","ref","onPressEnter","onBlur","paddingRight","Intl","NumberFormat","currency","format","map","el","reduce","accu","curr","strong","BudgetPage","handleDelete","key","newPageItems","findIndex","item","charAt","filter","dispatch","step","handleAdd","count","newData","String","fromCharCode","childCount","handleAddChild","pageItems","row","hIndex","splice","cIndex","handleComment","addWrapper","createRef","newObj","columnNames","Object","keys","columns","tocap","toUpperCase","slice","render","text","isNaN","acc","onConfirm","this","components","body","cell","col","onCell","content","marginTop","marginBottom","rowClassName","bordered","dataSource","expandable","expandRowByClick","pagination","hideOnSinglePage","summary","c","Summary","Row","Cell","colSpan","fontWeight","comments","val","comment","target","Component","RangePicker","DatePicker","formItemLayout","labelCol","xs","sm","md","lg","xl","xxl","wrapperCol","span","percentFormatter","BudgetInfo","payload","pageTitle","initialValues","infoData","range","moment","unix","faoff","faon","gross","Group","Button","formatter","min","Content","Layout","Main","pull","textAlign","align","Header","defaultData","require","reducer","state","action","newPages","commentPages","newInfo","entries","Error","App","setStep","localState","JSON","parse","localStorage","getItem","useReducer","setItem","stringify","position","zIndex","width","src","logo","alt","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,UAAY,gC,oBCApED,EAAOC,QAAU,CAAC,IAAM,kBAAkB,IAAM,oB,wCCDhDD,EAAOC,QAAU,IAA0B,kC,oBCC3CD,EAAOC,QAAU,CAAC,YAAc,mC,oBCAhCD,EAAOC,QAAU,CAAC,QAAU,8B,gnECuHbC,EAnHG,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAwCpBC,EAAmB,SAACC,GACtB,IAAIC,EAAS,GAUb,OATAD,EAAKE,SAAQ,SAACC,GAAa,IAAD,EACQC,EAAYD,GAAS,GAD7B,mBACjBE,EADiB,KACLC,EADK,KAEtBA,EAAUC,KAAK,CAAEC,SAAS,SAAD,OAAWL,EAAQM,OAASC,MAAOL,IAC5DJ,EAAOM,KAAK,CACRI,UAAWR,EAAQM,MACnBH,UAAWA,OAIZL,GAGLG,EAAc,SAACD,EAASS,GAC1B,IAAIC,EAAS,EACTC,EAAU,GA+Bd,OA9BAX,EAAQY,MAAMb,SAAQ,SAACc,GACnB,IAAIC,EAGAC,GAFaD,EAAbL,EAAyB,CAAEJ,SAAS,SAAD,OAAWQ,EAAOG,OACxC,CAAEX,SAAUQ,EAAOG,OAE1BC,SAAW,EACrBH,EAAUI,KAAO,EACjBJ,EAAUP,MAAQ,EAClBM,EAAOM,SAASpB,SAAQ,SAACqB,GACrBL,EAAW,CACPV,SAAUe,EAAMJ,KAChBC,SAAUG,EAAMH,SAChBC,KAAME,EAAMF,KACZX,MACIc,OAAOC,SAASF,EAAMH,UAAYI,OAAOE,WAAWH,EAAMF,OAElEJ,EAAUG,UAAYI,OAAOC,SAASF,EAAMH,UAC5CH,EAAUI,MAAQG,OAAOE,WAAWH,EAAMF,MAC1CJ,EAAUP,OAASQ,EAASR,SAG5BM,EAAOM,SAASK,OAAS,IACzBV,EAAUI,KAAOJ,EAAUI,KAAOL,EAAOM,SAASK,QAEtDd,GAAUI,EAAUP,MAChBE,QAA4BgB,IAAbV,GACfJ,EAAQP,KAAK,GAAIW,GAErBJ,EAAQP,KAAKU,MAEV,CAACJ,EAAQC,IAGde,EAAmB,SAAC7B,GACtB,IAAI8B,EAAU,CAAC,IACXpB,EAAQ,EAaZ,OAZAV,EAAKE,SAAQ,SAACC,GACV2B,EAAQvB,KAAK,GAAI,CAAEC,SAAUL,EAAQM,QADf,MAEQL,EAAYD,GAAS,GAF7B,mBAEf4B,EAFe,KAEJC,EAFI,MAGtBF,EAAUA,EAAQG,OAAOD,IACjBzB,KAAK,CACTC,SAAS,SAAD,OAAWL,EAAQM,OAC3BC,MAAOqB,EAAUG,QAAQ,KAE7BJ,EAAQvB,KAAK,IACbG,GAASqB,KAEbD,EAAQvB,KAAK,GAAI,CAAEC,SAAU,QAASE,MAAOA,EAAMwB,QAAQ,KACpDJ,GAGX,OACI,kBAAC,IAAD,CAAQK,KAAK,UAAUC,QAAS,SAACC,GAAD,OAtGhB,SAACxC,EAASC,GAC1B,IAAMwC,EAAgBT,EAAiBhC,EAAQ0C,OACzCC,EAAKC,QAAWC,cAAcJ,GAChCK,EAAKF,QAAWG,WACpBH,QAAWI,kBAAkBF,EAAIH,EAAI,YAEdzC,EAAiBF,EAAQ0C,OACjCrC,SAAQ,YAA+B,IAA5BS,EAA2B,EAA3BA,UAAWL,EAAgB,EAAhBA,UAC3BwC,EAAYL,QAAWC,cAAcpC,GAC3CmC,QAAWI,kBAAkBF,EAAIG,EAAWnC,MAGhDgC,EAAGI,UAAY,CACXC,OAAQnD,EAAQoD,KAAK9B,KACrB+B,QAASrD,EAAQoD,KAAKE,QACtBC,SAAUvD,EAAQoD,KAAKI,SACvB,aAAcxD,EAAQoD,KAAKK,MAC3B,WAAYzD,EAAQoD,KAAKM,IACzBC,MAAO3D,EAAQoD,KAAKQ,MACpBC,MAAO7D,EAAQoD,KAAKU,OAExB,IAAMC,EAAcnB,QAAWE,EAAI,CAC/BkB,SAAU,OACV1B,KAAM,QACN2B,MAAO,CACHC,OAAQlE,EAAQoD,KAAKe,QACrBC,YAAaC,KAAKC,MAAMC,cAG1BpE,EAAO,IAAIqE,KAAK,CAACT,GAAc,CAAEzB,KAlCvC,oFAmCAmC,SAAiBtE,EAAMF,EAlCL,SA0GqByE,CAAY1E,EAASC,KAA5D,W,iFCtGA0E,EAASC,IAATD,KAEO,SAASE,EAAYC,GAChC,OACI,kBAAC,IAAD,CACIC,UAAU,WACVC,QAASF,EAAMG,KACfC,SAAUJ,EAAMI,SAChBC,UAAWC,IAAOC,aAElB,kBAACV,EAAD,CAAMW,MAAM,cAAcC,KAAM,kBAACC,EAAA,EAAD,QAChC,kBAACb,EAAD,CAAMW,MAAM,QAAQC,KAAM,kBAACE,EAAA,EAAD,QAC1B,kBAACd,EAAD,CAAMW,MAAM,0BAA0BC,KAAM,kBAACG,EAAA,EAAD,QAC5C,kBAACf,EAAD,CAAMW,MAAM,cAAcC,KAAM,kBAACI,EAAA,EAAD,QAChC,kBAAChB,EAAD,CAAMW,MAAM,yBAAyBC,KAAM,kBAACK,EAAA,EAAD,QAC3C,kBAACjB,EAAD,CAAMW,MAAM,WAAWC,KAAM,kBAACM,EAAA,EAAD,S,4JCvBjCC,EAAgBC,IAAhBD,MAAOE,EAASD,IAATC,KACPC,EAAaC,IAAbD,SAIFE,EAAkBC,IAAMC,gBAExBC,EAAc,SAAC,GAAwB,EAAtBC,MAAuB,IAAbzB,EAAY,2BAC1B0B,IAAKC,UAAbC,EADkC,oBAEzC,OACI,kBAAC,IAAD,CAAMA,KAAMA,EAAMC,WAAW,GACzB,kBAACR,EAAgBS,SAAjB,CAA0BC,MAAOH,GAC7B,uBAAQ5B,MAMlBgC,EAAe,SAAC,GASf,IARHxB,EAQE,EARFA,MACAyB,EAOE,EAPFA,SACAtF,EAME,EANFA,SACAuF,EAKE,EALFA,UACAC,EAIE,EAJFA,OACAC,EAGE,EAHFA,WACAC,EAEE,EAFFA,UACGC,EACD,+FAC4BC,oBAAS,GADrC,mBACKC,EADL,KACcC,EADd,KAEIC,EAAWC,mBACXf,EAAOgB,qBAAWvB,GACxBwB,qBAAU,WACFL,GACAE,EAASxC,QAAQ4C,UAEtB,CAACN,IAEJ,IAAMO,EAAa,WACfN,GAAYD,GACZZ,EAAKoB,eAAL,eACKd,EAAYC,EAAOD,MAItBe,EAAI,uCAAG,WAAOvF,GAAP,eAAAwF,EAAA,+EAEgBtB,EAAKuB,iBAFrB,OAECC,EAFD,OAGLL,IACAX,EAAW,2BAAKD,GAAWiB,IAJtB,gDAMLC,QAAQC,IAAI,eAAZ,MANK,yDAAH,sDAUNC,EAAY5G,EAEhB,GAAIsF,KAAcE,EAAO9F,QAAW8F,EAAOqB,MAAsB,SAAdtB,GAC/CqB,EAAYf,EACR,kBAAC,IAAKiB,KAAN,CACIC,MAAO,CACHC,OAAQ,GAEZnH,KAAM0F,EACN0B,MAAO,CACH,CACIC,UAAU,EACVC,QAAQ,GAAD,OAAKtD,EAAL,oBAIA,WAAd6B,EACG,kBAAC,IAAD,CAAa0B,IAAKrB,EAAUsB,aAAcf,EAAMgB,OAAQhB,IAExD,kBAAC,IAAD,CAAOc,IAAKrB,EAAUsB,aAAcf,EAAMgB,OAAQhB,KAI1D,yBACI5C,UAAU,2BACVqD,MAAO,CACHQ,aAAc,IAElBzG,QAASsF,GAEM,SAAdb,EACK,IAAIiC,KAAKC,aAAa,QAAS,CAC3BV,MAAO,WACPW,SAAU,QACXC,OAAOzH,OAAOE,WAAWJ,EAAS,KACrCA,QAGX,GACHwF,GACAA,EAAO9F,QACP8F,EAAOxF,SAASK,OAAS,GACX,SAAdkF,EACF,CACE,IAAMnG,EAAQoG,EAAOxF,SAChB4H,KAAI,SAACC,GAAD,OAAQ3H,OAAOE,WAAWyH,EAAGtC,OACjCuC,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,KACnCpB,EACI,kBAACrC,EAAD,CAAM0D,QAAM,GACP,IAAIT,KAAKC,aAAa,QAAS,CAC5BV,MAAO,WACPW,SAAU,QACXC,OAAOvI,EAAQoG,EAAOxF,SAASK,cAGvC,GACHmF,GACAA,EAAO9F,QACP8F,EAAOxF,SAASK,OAAS,IACV,aAAdkF,GAA0C,UAAdA,GAC/B,CACE,IAAMnG,EAAQoG,EAAOxF,SAChB4H,KAAI,SAACC,GAAD,OAAQ3H,OAAOE,WAAWyH,EAAGtC,OACjCuC,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,KACnCpB,EAAY,kBAACrC,EAAD,CAAM0D,QAAM,GAAE7I,GAG9B,OAAO,uBAAQuG,EAAYiB,IAGVsB,E,kDACjB,WAAY7E,GAAQ,IAAD,uBACf,cAAMA,IA8FV8E,aAAe,SAACC,GACZ,IAAIC,EAAe,EAAKhF,MAAM3C,SAASjB,MACjCqF,EAAQuD,EAAaC,WAAU,SAACC,GAAD,OAAUA,EAAKH,MAAQA,EAAII,OAAO,MACnEJ,EAAI/H,OAAS,EACbgI,EAAavD,GAAO9E,SAAWqI,EAAavD,GAAO9E,SAASyI,QACxD,SAACF,GAAD,OAAUA,EAAKH,MAAQA,KAE1BC,EAAeA,EAAaI,QAAO,SAACF,GAAD,OAAUA,EAAKH,MAAQA,KAE/D,EAAK/E,MAAMqF,SAAS,CAChB7H,KAAM,OACN8H,KAAM,EAAKtF,MAAMsF,KACjBjI,SAAU2H,KA3GC,EA+GnBO,UAAY,WAAO,IACPlI,EAAa,EAAK2C,MAAlB3C,SACFmI,EAAQnI,EAASjB,MAAMY,OAAS,EAChCyI,EAAU,CACZV,IAAKW,OAAOC,aAAa,GAAKH,GAC9BhJ,KAAK,GAAD,OAAKa,EAASvB,MAAd,iBAA4B0J,GAChC/I,SAAU,KACVC,KAAM,KACNL,QAAQ,EACRmH,MAAM,EACNoC,WAAY,EACZjJ,SAAU,IAGd,EAAKqD,MAAMqF,SAAS,CAChB7H,KAAM,OACN8H,KAAM,EAAKtF,MAAMsF,KACjBjI,SAAS,GAAD,mBAAMA,EAASjB,OAAf,CAAsBqJ,OAhInB,EAoInBI,eAAiB,SAACd,GACd,IAAMe,EAAY,EAAK9F,MAAM3C,SAASjB,MAChCqF,EAAQqE,EAAUb,WAAU,SAACC,GAAD,OAAUA,EAAKH,MAAQA,KACzD,KAAItD,EAAQ,GAAZ,CAGA,IAAM+D,EAAQM,EAAUrE,GAAOmE,WAAa,EAC5CE,EAAUrE,GAAOmE,WAAaJ,EAC9BM,EAAUrE,GAAO9E,SAASf,KAAK,CAC3BmJ,IAAKA,EAAMS,EACXhJ,KAAK,QAAD,OAAUgJ,GACd/I,SAAU,EACVC,KAAM,EACNL,QAAQ,IAGZ,EAAK2D,MAAMqF,SAAS,CAAE7H,KAAM,OAAQ8H,KAAM,EAAKtF,MAAMsF,KAAMjI,SAAUyI,MApJtD,EAuJnB1D,WAAa,SAAC2D,GACV,IAAMN,EAAO,YAAO,EAAKzF,MAAM3C,SAASjB,OAClC4J,EAASP,EAAQR,WAAU,SAACC,GAAD,OAAUa,EAAIhB,IAAII,OAAO,KAAOD,EAAKH,OAChEG,EAAOO,EAAQO,GACrB,QAAmB/I,IAAf8I,EAAI1J,QAAyB0J,EAAI1J,OAUjCoJ,EAAQQ,OAAOD,EAAQ,EAAvB,2BAA+Bd,GAASa,QAVC,CACzC,IAAMG,EAAST,EAAQO,GAAQrJ,SAASsI,WACpC,SAACC,GAAD,OAAUa,EAAIhB,MAAQG,EAAKH,OAEzBnI,EAAQ6I,EAAQO,GAAQrJ,SAASuJ,GACvCT,EAAQO,GAAQrJ,SAASsJ,OAAOC,EAAQ,EAAxC,2BACOtJ,GACAmJ,IAMX,EAAK/F,MAAMqF,SAAS,CAAE7H,KAAM,OAAQ8H,KAAM,EAAKtF,MAAMsF,KAAMjI,SAAUoI,KAxKtD,EA2KnBU,cA3KmB,sBA2KH,sBAAAjD,EAAA,0FAzKZ,EAAKkD,WAAa9E,IAAM+E,YAExB,IAAIC,EAAS,EAAKtG,MAAM3C,SAASjB,MAAM,GACjCmK,EAAcC,OAAOC,KAAKH,GAAQlB,QACpC,SAACL,GAAD,MACY,QAARA,GACQ,aAARA,GACQ,WAARA,GACQ,eAARA,KAVO,OAYf,EAAK2B,QAAUH,EAAYhC,KAAI,SAACQ,GAAD,MAAU,CACrCvE,OAvIQmG,EAuIU5B,EAvIA4B,EAAMxB,OAAO,GAAGyB,cAAgBD,EAAME,MAAM,IAwI9D3E,UAAW6C,EACX1C,UAAmB,SAAR0C,EAAiB,OAAS,SACrC9C,UAAU,EACV8C,IAAKA,GA3IE,IAAC4B,KA6IZ,EAAKD,QAAQ9K,KACT,CACI4E,MAAO,QACP0B,UAAW,QACX4E,OAAQ,SAACC,EAAM5E,GACX,GAAKA,EAAO9F,OASL,CACH,IAAIN,EAAQoG,EAAOxF,SACd4H,KAAI,SAACC,GACF,OACKwC,MAAMnK,OAAOC,SAAS0H,EAAG/H,YACzBuK,MAAMnK,OAAOE,WAAWyH,EAAG9H,OAMlB,EAHNG,OAAOC,SAAS0H,EAAG/H,UACnBI,OAAOE,WAAWyH,EAAG9H,SAIhC+H,QAAO,SAACwC,EAAKtC,GAAN,OAAesC,EAAMtC,IAAM,GACvC,OACI,kBAACzD,EAAD,CAAM0D,QAAM,GACP,IAAIT,KAAKC,aAAa,QAAS,CAC5BV,MAAO,WACPW,SAAU,QACXC,OAAOvI,IA3BlB,IAAIA,EACAc,OAAOC,SAASqF,EAAO1F,UACvBI,OAAOE,WAAWoF,EAAOzF,MAE7B,OADIsK,MAAMjL,KAAQA,EAAQ,GACnB,IAAIoI,KAAKC,aAAa,QAAS,CAClCV,MAAO,WACPW,SAAU,QACXC,OAAOvI,KA0BtB,CACIyE,MAAO,YACP0B,UAAW,YACX4E,OAAQ,SAACC,EAAM5E,GAAP,OACJ,EAAKnC,MAAM3C,SAASjB,MAAMY,QAAU,EAChC,oCACKmF,EAAO9F,OACJ,kBAAC,IAAD,CACImB,KAAK,OACLC,QAAS,kBAAM,EAAKoI,eAAe1D,EAAO4C,OAF9C,OAOA,kBAAC,IAAD,CACIvE,MAAM,kBACN0G,UAAW,kBAAM,EAAKpC,aAAa3C,EAAO4C,OAE1C,kBAAC,IAAD,CAAQvH,KAAK,QAAb,gBAGSP,IAAhBkF,EAAOqB,MAAsBrB,EAAOqB,MACjC,kBAAC,IAAD,CACIhD,MAAM,kBACN0G,UAAW,kBAAM,EAAKpC,aAAa3C,EAAO4C,OAE1C,kBAAC,IAAD,CAAQvH,KAAK,QAAb,YAIZ,QAxFD,E,qDA6KT,IAAD,OACGH,EAAa8J,KAAKnH,MAAlB3C,SACF+J,EAAa,CACfC,KAAM,CACFtB,IAAKvE,EACL8F,KAAMtF,IAGR0E,EAAUS,KAAKT,QAAQnC,KAAI,SAACgD,GAC9B,OAAKA,EAAItF,SAIF,2BACAsF,GADP,IAEIC,OAAQ,SAACrF,GAAD,MAAa,CACjBA,SACAF,SAAUsF,EAAItF,SACdC,UAAWqF,EAAIrF,UACf1B,MAAO+G,EAAI/G,MACX6B,UAAWkF,EAAIlF,UACfD,WAAY,EAAKA,eAXdmF,KAef,OACI,yBAAKlH,UAAWC,IAAOmH,SACnB,kBAACzG,EAAD,KAAQmG,KAAKnH,MAAM3C,SAASvB,OAC5B,kBAAC,IAAD,CACI2B,QAAS0J,KAAK5B,UACd/H,KAAK,UACLkG,MAAO,CACHgE,UAAW,GACXC,aAAc,IAElB5D,IAAKoD,KAAKf,YAPd,iBAWA,kBAAC,IAAD,CACIgB,WAAYA,EACZQ,aAAc,iBAAM,gBACpBC,UAAQ,EACRC,WAAYzK,EAASjB,MACrBsK,QAASA,EACTqB,WAAY,CACRC,kBAAkB,GAEtBC,WAAY,CAAEC,kBAAkB,GAChCC,QAAS,SAAC9K,GACN,IAAMtB,EAAQsB,EACTkH,KAAI,SAACC,GAAD,OACDA,EAAG7H,SACE4H,KACG,SAAC6D,GAAD,OACIvL,OAAOC,SAASsL,EAAE3L,UAClBI,OAAOE,WAAWqL,EAAE1L,SAE3B+H,QAAO,SAACwC,EAAKtC,GAAN,OAAesC,EAAMtC,IAAM,MAE1CF,QAAO,SAACwC,EAAKtC,GAAN,OAAesC,EAAMtC,IAAM,GACvC,OACI,kBAAC,IAAM0D,QAAQC,IAAf,KACI,kBAAC,IAAMD,QAAQE,KAAf,CAAoBC,QAAS,GAA7B,SACA,kBAAC,IAAMH,QAAQE,KAAf,KACI,kBAACrH,EAAD,CACIwC,MAAO,CACH+E,WAAY,WAGf,IAAItE,KAAKC,aAAa,QAAS,CAC5BV,MAAO,WACPW,SAAU,QACXC,OAAOvI,SAOlC,kBAAC,IAAK0H,KAAN,CAAWC,MAAO,CAAEC,OAAQ,QAAU7H,MAAM,YACxC,kBAACqF,EAAD,CACIY,MAAOoF,KAAKnH,MAAM3C,SAASqL,SAC3BtI,SAAU,SAACuI,GACP,EAAK3I,MAAMqF,SAAS,CAChB7H,KAAM,UACNoL,QAASD,EAAIE,OAAO9G,MACpBuD,KAAM,EAAKtF,MAAMsF,gB,GArQTwD,a,6EC1HhC9H,GAAUC,IAAVD,MACA+H,GAAgBC,IAAhBD,YAEFE,GAAiB,CACnBC,SAAU,CAAEC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,IAAK,GACvDC,WAAY,CAAEC,KAAM,KAGlBC,GAAmB,SAAC5H,GAAD,gBAAcA,EAAd,MAEV,SAAS6H,GAAW5J,GAAQ,IAAD,EACvB0B,IAAKC,UAAbC,EAD+B,oBAEhCqB,EAAI,uCAAG,4BAAAC,EAAA,sEACYtB,EAAKuB,iBADjB,OACHC,EADG,OAETpD,EAAMqF,SAAS,CAAE7H,KAAM,OAAQqM,QAASzG,IAF/B,2CAAH,qDAIV,OACI,yBAAK/C,UAAWC,IAAOmH,SACnB,kBAAC,GAAD,CAAOpH,UAAWC,IAAOwJ,WAAzB,eACA,kBAAC,IAAD,eACIlI,KAAMA,GACFqH,GAFR,CAGIc,cAAe,CACXvN,KAAMwD,EAAMgK,SAASxN,KACrBgC,QAASwB,EAAMgK,SAASxL,QACxBE,SAAUsB,EAAMgK,SAAStL,SACzBuL,MACIjK,EAAMgK,SAASrL,OAASqB,EAAMgK,SAASpL,IACjC,CACIsL,KAAOC,KAAKnK,EAAMgK,SAASrL,OAC3BuL,KAAOC,KAAKnK,EAAMgK,SAASpL,MAE/B,KACVE,MAAOkB,EAAMgK,SAASlL,MACtBO,QAASW,EAAMgK,SAAS3K,QACxBL,MAAOgB,EAAMgK,SAAShL,MACtBoL,MAAOpK,EAAMgK,SAASI,MACtBC,KAAMrK,EAAMgK,SAASK,KACrBC,MAAOtK,EAAMgK,SAASM,SAG1B,kBAAC,IAAK7G,KAAN,CAAWjH,KAAK,OAAOV,MAAM,0BACzB,kBAAC,IAAD,CAAOkI,aAAcf,EAAMgB,OAAQhB,KAEvC,kBAAC,IAAKQ,KAAN,CAAWjH,KAAK,UAAUV,MAAM,gBAC5B,kBAAC,IAAD,CAAOkI,aAAcf,EAAMgB,OAAQhB,KAEvC,kBAAC,IAAKQ,KAAN,CAAWjH,KAAK,WAAWV,MAAM,iBAC7B,kBAAC,IAAD,CAAOkI,aAAcf,EAAMgB,OAAQhB,KAEvC,kBAAC,IAAKQ,KAAN,CAAWjH,KAAK,QAAQV,MAAM,kBAC1B,kBAACiN,GAAD,CAAa3I,SAAU6C,EAAMqB,OA5C9B,gBA8CH,kBAAC,IAAKb,KAAN,CAAWjH,KAAK,QAAQV,MAAM,sBAC1B,kBAAC,WAAMyO,MAAP,KACI,kBAAC,WAAMC,OAAP,CAAczI,OAAO,GAArB,SACA,kBAAC,WAAMyI,OAAP,CAAczI,OAAO,GAArB,eAGR,kBAAC,IAAK0B,KAAN,CAAWjH,KAAK,UAAUV,MAAM,gBAC5B,kBAAC,IAAD,CAAOkI,aAAcf,EAAMgB,OAAQhB,KAEvC,kBAAC,IAAKQ,KAAN,CAAWjH,KAAK,QAAQV,MAAM,gBAC1B,kBAAC,IAAD,CAAO0B,KAAK,MAAMwG,aAAcf,EAAMgB,OAAQhB,KAElD,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAKyG,KAAM,GACP,kBAAC,IAAKjG,KAAN,CACIjH,KAAK,QACLV,MAAM,oBACNoN,SAAU,CAAEQ,KAAM,KAElB,kBAAC,IAAD,CACIe,UAAWd,GACX3F,aAAcf,EACdgB,OAAQhB,EACRyH,IAAK,MAIjB,kBAAC,KAAD,CAAKhB,KAAM,GACP,kBAAC,IAAKjG,KAAN,CACIjH,KAAK,OACLV,MAAM,mBACNoN,SAAU,CAAEQ,KAAM,KAElB,kBAAC,IAAD,CACIe,UAAWd,GACX3F,aAAcf,EACdgB,OAAQhB,EACRyH,IAAK,MAIjB,kBAAC,KAAD,CAAKhB,KAAM,GACP,kBAAC,IAAKjG,KAAN,CACIjH,KAAK,QACLV,MAAM,eACNoN,SAAU,CAAEQ,KAAM,KAElB,kBAAC,IAAD,CACIe,UAAWd,GACX3F,aAAcf,EACdgB,OAAQhB,EACRyH,IAAK,S,6CCrG7BC,GAAYC,KAAZD,QAEO,SAASE,GAAK7K,GACzB,OACI,kBAAC2K,GAAD,KACI,kBAAC,KAAD,CAAKtK,UAAWC,KAAOyF,KACnB,kBAAC,KAAD,CAAK2D,KAAM,EAAGoB,KAAM,EAAGzK,UAAWC,KAAOiH,KACrC,kBAACxH,EAAD,CAAaK,SAAUJ,EAAMI,SAAUD,KAAMH,EAAMsF,OACnD,yBAAK5B,MAAO,CAAEqH,UAAW,WACrB,kBAAC,KAAD,CAAOC,MAAM,SAAStH,MAAO,CAAEiE,aAAc,SACzC,kBAAC,EAAD,CACIzM,QAAS8E,EAAM3E,KACfF,SAAU,uBAEd,kBAAC,IAAD,CACIqF,MAAM,iBACN0G,UAAW,kBAAMlH,EAAMqF,SAAS,CAAE7H,KAAM,YAExC,kBAAC,IAAD,CAAQA,KAAK,SAAb,aAKhB,kBAAC,KAAD,CAAKkM,KAAM,GAAI9N,KAAM,GACD,IAAfoE,EAAMsF,KACH,kBAACsE,GAAD,CACIvE,SAAUrF,EAAMqF,SAChB2E,SAAUhK,EAAM3E,KAAKiD,OAGzB,kBAAC,EAAD,CACIjB,SAAU2C,EAAM3E,KAAKuC,MAAMoC,EAAMsF,KAAO,GACxCA,KAAMtF,EAAMsF,KAAO,EACnBD,SAAUrF,EAAMqF,c,ICpCpC4F,GAAWL,KAAXK,OAEJC,GAAcC,EAAQ,KAE1B,SAASC,GAAQC,EAAOC,GACpB,OAAQA,EAAO9N,MACX,IAAK,OACD,IAAM+N,EAAQ,YAAOF,EAAMzN,OAE3B,OADA2N,EAASD,EAAOhG,MAAMlJ,MAAQkP,EAAOjO,SAC9B,2BAAKgO,GAAZ,IAAmBzN,MAAO2N,IAC9B,IAAK,UACD,IAAMC,EAAY,YAAOH,EAAMzN,OAE/B,OADA4N,EAAaF,EAAOhG,MAAMoD,SAAW4C,EAAO1C,QACrC,2BACAyC,GADP,IAEIzN,MAAO4N,IAEf,IAAK,OAED,IADA,IAAIC,EAAUJ,EAAM/M,KACpB,MAA2BkI,OAAOkF,QAAQJ,EAAOzB,SAAjD,eAA2D,CAAC,IAAD,sBAA/C9E,EAA+C,KAA1ChD,EAA0C,KACvD,QAAc9E,IAAV8E,GAAiC,OAAVA,EAC3B,GAAY,UAARgD,EAAiB,CAAC,IAAD,cACIhD,EADJ,GACVpD,EADU,KACHC,EADG,KAEjB6M,EAAQ9M,MAAQA,EAAMwL,OACtBsB,EAAQ7M,IAAMA,EAAIuL,YAElBsB,EAAQ1G,GAAOhD,EAGvB,OAAO,2BAAKsJ,GAAZ,IAAmB/M,KAAMmN,IAC7B,IAAK,QACD,OAAOP,GACX,QACI,MAAM,IAAIS,MAAM,4BAoCbC,OA/Bf,WAAgB,IAAD,EACarJ,mBAAS,GADtB,mBACJ+C,EADI,KACEuG,EADF,KAGLC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,qBAAuBhB,GAH/D,EAIciB,qBAAWf,GAASU,GAAcZ,IAJhD,mBAIJ7P,EAJI,KAIEgK,EAJF,KAYX,OAPAxC,qBAAU,WACNoJ,aAAaG,QAAQ,kBAAmBL,KAAKM,UAAUhR,MACxD,CAACA,IAECA,EAAKiD,MAASjD,EAAKuC,OACpByH,EAAS,CAAE7H,KAAM,UAGjB,kBAAC,KAAD,KACI,kBAACyN,GAAD,CACIvH,MAAO,CACH4I,SAAU,QACVC,OAAQ,EACRC,MAAO,OACPzB,UAAW,WAGf,yBAAK0B,IAAKC,IAAMrM,UAAU,WAAWsM,IAAI,UAE7C,kBAAC,KAAD,KACI,kBAAC9B,GAAD,CAAMvF,KAAMA,EAAMjK,KAAMA,EAAMgK,SAAUA,EAAUjF,SAvB7C,SAACF,GAAD,OAAa2L,EAAQ3L,SClCtB0M,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASnG,OACL,kBAAC,IAAMoG,WAAP,KACI,kBAAC,GAAD,OAEJC,SAASC,eAAe,SDyHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvK,QAAQuK,MAAMA,EAAM9J,c","file":"static/js/main.f4b990ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"BudgetInfo_content__27obA\",\"pageTitle\":\"BudgetInfo_pageTitle__VDZRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Main_row__O0Ybk\",\"col\":\"Main_col__3wFmk\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stepsParent\":\"BudgetSteps_stepsParent__CZ_V4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"BudgetPage_content__2lFbs\"};","import React from \"react\";\nimport { Button } from \"antd\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nconst ExportCSV = ({ csvData, fileName }) => {\n    const fileType =\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n    const fileExtension = \".xlsx\";\n\n    // TODO: format the excel to look nice\n\n    const exportToCSV = (csvData, fileName) => {\n        const convertedData = getOverviewSheet(csvData.pages);\n        const ws = XLSX.utils.json_to_sheet(convertedData);\n        let wb = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(wb, ws, \"Overview\");\n\n        const detailedSheets = getEachTypeSheet(csvData.pages);\n        detailedSheets.forEach(({ sheetName, sheetData }) => {\n            const pageSheet = XLSX.utils.json_to_sheet(sheetData);\n            XLSX.utils.book_append_sheet(wb, pageSheet, sheetName);\n        });\n\n        wb.Custprops = {\n            Vendor: csvData.info.name,\n            Project: csvData.info.project,\n            Division: csvData.info.division,\n            \"Start Date\": csvData.info.start,\n            \"End Date\": csvData.info.end,\n            Grant: csvData.info.grant,\n            Phone: csvData.info.phone,\n        };\n        const excelBuffer = XLSX.write(wb, {\n            bookType: \"xlsx\",\n            type: \"array\",\n            Props: {\n                Author: csvData.info.contact,\n                CreatedDate: Date.now().toString(),\n            },\n        });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    };\n\n    const getEachTypeSheet = (data) => {\n        let sheets = [];\n        data.forEach((pageObj) => {\n            let [sheetTotal, sheetData] = getPageData(pageObj, true);\n            sheetData.push({ pagename: `Total ${pageObj.label}`, total: sheetTotal });\n            sheets.push({\n                sheetName: pageObj.label,\n                sheetData: sheetData,\n            });\n        });\n\n        return sheets;\n    };\n\n    const getPageData = (pageObj, getChildren) => {\n        let htotal = 0;\n        let headers = [];\n        pageObj.items.forEach((header) => {\n            let headerObj;\n            if (getChildren) headerObj = { pagename: `Total ${header.name}` };\n            else headerObj = { pagename: header.name };\n            let childObj;\n            headerObj.quantity = 0;\n            headerObj.rate = 0;\n            headerObj.total = 0;\n            header.children.forEach((child) => {\n                childObj = {\n                    pagename: child.name,\n                    quantity: child.quantity,\n                    rate: child.rate,\n                    total:\n                        Number.parseInt(child.quantity) * Number.parseFloat(child.rate),\n                };\n                headerObj.quantity += Number.parseInt(child.quantity);\n                headerObj.rate += Number.parseFloat(child.rate);\n                headerObj.total += childObj.total;\n            });\n\n            if (header.children.length > 0) {\n                headerObj.rate = headerObj.rate / header.children.length;\n            }\n            htotal += headerObj.total;\n            if (getChildren && childObj !== undefined) {\n                headers.push([], childObj);\n            }\n            headers.push(headerObj);\n        });\n        return [htotal, headers];\n    };\n\n    const getOverviewSheet = (data) => {\n        let arrData = [[]];\n        let total = 0;\n        data.forEach((pageObj) => {\n            arrData.push([], { pagename: pageObj.label });\n            const [pageTotal, pageData] = getPageData(pageObj, false);\n            arrData = arrData.concat(pageData);\n            arrData.push({\n                pagename: `Total ${pageObj.label}`,\n                total: pageTotal.toFixed(2),\n            });\n            arrData.push([]);\n            total += pageTotal;\n        });\n        arrData.push([], { pagename: \"Total\", total: total.toFixed(2) });\n        return arrData;\n    };\n\n    return (\n        <Button type=\"primary\" onClick={(e) => exportToCSV(csvData, fileName)}>\n            Export\n        </Button>\n    );\n};\n\nexport default ExportCSV;\n","import React from \"react\";\nimport { Steps } from \"antd\";\nimport {\n    UserOutlined,\n    ToolOutlined,\n    UsergroupAddOutlined,\n    DollarOutlined,\n    BankOutlined,\n    InfoCircleOutlined,\n} from \"@ant-design/icons\";\nimport styles from \"./BudgetSteps.module.scss\";\n\nconst { Step } = Steps;\n\nexport default function BudgetSteps(props) {\n    return (\n        <Steps\n            direction=\"vertical\"\n            current={props.page}\n            onChange={props.onChange}\n            className={styles.stepsParent}\n        >\n            <Step title=\"Information\" icon={<InfoCircleOutlined />} />\n            <Step title=\"Labor\" icon={<UserOutlined />} />\n            <Step title=\"Equiptment and Supplies\" icon={<ToolOutlined />} />\n            <Step title=\"Consultants\" icon={<UsergroupAddOutlined />} />\n            <Step title=\"Non-Personnel Expenses\" icon={<DollarOutlined />} />\n            <Step title=\"Overhead\" icon={<BankOutlined />} />\n        </Steps>\n    );\n}\n","import React, { Component, useContext, useState, useEffect, useRef } from \"react\";\nimport styles from \"./BudgetPage.module.scss\";\n\nimport { Table, Input, InputNumber, Popconfirm, Form, Button, Typography } from \"antd\";\nconst { Title, Text } = Typography;\nconst { TextArea } = Input;\n\nconst capitalize = (tocap) => tocap.charAt(0).toUpperCase() + tocap.slice(1);\n\nconst EditableContext = React.createContext();\n\nconst EditableRow = ({ index, ...props }) => {\n    const [form] = Form.useForm();\n    return (\n        <Form form={form} component={false}>\n            <EditableContext.Provider value={form}>\n                <tr {...props} />\n            </EditableContext.Provider>\n        </Form>\n    );\n};\n\nconst EditableCell = ({\n    title,\n    editable,\n    children,\n    dataIndex,\n    record,\n    handleSave,\n    inputType,\n    ...restProps\n}) => {\n    const [editing, setEditing] = useState(false);\n    const inputRef = useRef();\n    const form = useContext(EditableContext);\n    useEffect(() => {\n        if (editing) {\n            inputRef.current.focus();\n        }\n    }, [editing]);\n\n    const toggleEdit = () => {\n        setEditing(!editing);\n        form.setFieldsValue({\n            [dataIndex]: record[dataIndex],\n        });\n    };\n\n    const save = async (e) => {\n        try {\n            const values = await form.validateFields();\n            toggleEdit();\n            handleSave({ ...record, ...values });\n        } catch (errInfo) {\n            console.log(\"Save failed:\", errInfo);\n        }\n    };\n\n    let childNode = children;\n\n    if (editable && (!record.header || (record.edit && dataIndex === \"name\"))) {\n        childNode = editing ? (\n            <Form.Item\n                style={{\n                    margin: 0,\n                }}\n                name={dataIndex}\n                rules={[\n                    {\n                        required: true,\n                        message: `${title} is required.`,\n                    },\n                ]}\n            >\n                {inputType === \"number\" ? (\n                    <InputNumber ref={inputRef} onPressEnter={save} onBlur={save} />\n                ) : (\n                    <Input ref={inputRef} onPressEnter={save} onBlur={save} />\n                )}\n            </Form.Item>\n        ) : (\n            <div\n                className=\"editable-cell-value-wrap\"\n                style={{\n                    paddingRight: 24,\n                }}\n                onClick={toggleEdit}\n            >\n                {dataIndex === \"rate\"\n                    ? new Intl.NumberFormat(\"en-US\", {\n                          style: \"currency\",\n                          currency: \"USD\",\n                      }).format(Number.parseFloat(children[1]))\n                    : children}\n            </div>\n        );\n    } else if (\n        record &&\n        record.header &&\n        record.children.length > 0 &&\n        dataIndex === \"rate\"\n    ) {\n        const total = record.children\n            .map((el) => Number.parseFloat(el[dataIndex]))\n            .reduce((accu, curr) => accu + curr);\n        childNode = (\n            <Text strong>\n                {new Intl.NumberFormat(\"en-US\", {\n                    style: \"currency\",\n                    currency: \"USD\",\n                }).format(total / record.children.length)}\n            </Text>\n        );\n    } else if (\n        record &&\n        record.header &&\n        record.children.length > 0 &&\n        (dataIndex === \"quantity\" || dataIndex === \"total\")\n    ) {\n        const total = record.children\n            .map((el) => Number.parseFloat(el[dataIndex]))\n            .reduce((accu, curr) => accu + curr);\n        childNode = <Text strong>{total}</Text>;\n    }\n\n    return <td {...restProps}>{childNode}</td>;\n};\n\nexport default class BudgetPage extends Component {\n    constructor(props) {\n        super(props);\n        this.addWrapper = React.createRef();\n\n        let newObj = this.props.pageData.items[0];\n        const columnNames = Object.keys(newObj).filter(\n            (key) =>\n                key !== \"key\" &&\n                key !== \"children\" &&\n                key !== \"header\" &&\n                key !== \"childCount\"\n        );\n        this.columns = columnNames.map((key) => ({\n            title: capitalize(key),\n            dataIndex: key,\n            inputType: key === \"name\" ? \"text\" : \"number\",\n            editable: true,\n            key: key,\n        }));\n        this.columns.push(\n            {\n                title: \"Total\",\n                dataIndex: \"total\",\n                render: (text, record) => {\n                    if (!record.header) {\n                        let total =\n                            Number.parseInt(record.quantity) *\n                            Number.parseFloat(record.rate);\n                        if (isNaN(total)) total = 0;\n                        return new Intl.NumberFormat(\"en-US\", {\n                            style: \"currency\",\n                            currency: \"USD\",\n                        }).format(total);\n                    } else {\n                        let total = record.children\n                            .map((el) => {\n                                if (\n                                    !isNaN(Number.parseInt(el.quantity)) &&\n                                    !isNaN(Number.parseFloat(el.rate))\n                                ) {\n                                    return (\n                                        Number.parseInt(el.quantity) *\n                                        Number.parseFloat(el.rate)\n                                    );\n                                } else return 0;\n                            })\n                            .reduce((acc, curr) => acc + curr, 0);\n                        return (\n                            <Text strong>\n                                {new Intl.NumberFormat(\"en-US\", {\n                                    style: \"currency\",\n                                    currency: \"USD\",\n                                }).format(total)}\n                            </Text>\n                        );\n                    }\n                },\n            },\n            {\n                title: \"operation\",\n                dataIndex: \"operation\",\n                render: (text, record) =>\n                    this.props.pageData.items.length >= 1 ? (\n                        <>\n                            {record.header ? (\n                                <Button\n                                    type=\"link\"\n                                    onClick={() => this.handleAddChild(record.key)}\n                                >\n                                    Add\n                                </Button>\n                            ) : (\n                                <Popconfirm\n                                    title=\"Sure to delete?\"\n                                    onConfirm={() => this.handleDelete(record.key)}\n                                >\n                                    <Button type=\"link\">Delete</Button>\n                                </Popconfirm>\n                            )}\n                            {record.edit !== undefined && record.edit && (\n                                <Popconfirm\n                                    title=\"Sure to delete?\"\n                                    onConfirm={() => this.handleDelete(record.key)}\n                                >\n                                    <Button type=\"link\">Delete</Button>\n                                </Popconfirm>\n                            )}\n                        </>\n                    ) : null,\n            }\n        );\n    }\n\n    // Only drawback is that you can only have at most 26 main sections per page\n    // keys are: section is [a-z] and subsection is matching [a-z] with [0-9]+ appended\n    handleDelete = (key) => {\n        let newPageItems = this.props.pageData.items;\n        const index = newPageItems.findIndex((item) => item.key === key.charAt(0));\n        if (key.length > 1)\n            newPageItems[index].children = newPageItems[index].children.filter(\n                (item) => item.key !== key\n            );\n        else newPageItems = newPageItems.filter((item) => item.key !== key);\n        // this.props.setPageData(newPageItems);\n        this.props.dispatch({\n            type: \"page\",\n            step: this.props.step,\n            pageData: newPageItems,\n        });\n    };\n\n    handleAdd = () => {\n        const { pageData } = this.props;\n        const count = pageData.items.length + 1;\n        const newData = {\n            key: String.fromCharCode(96 + count),\n            name: `${pageData.label} Item ${count}`,\n            quantity: null,\n            rate: null,\n            header: true,\n            edit: true,\n            childCount: 0,\n            children: [],\n        };\n        // this.props.setPageData([...pageData.items, newData]);\n        this.props.dispatch({\n            type: \"page\",\n            step: this.props.step,\n            pageData: [...pageData.items, newData],\n        });\n    };\n\n    handleAddChild = (key) => {\n        const pageItems = this.props.pageData.items;\n        const index = pageItems.findIndex((item) => item.key === key);\n        if (index < 0) {\n            return;\n        }\n        const count = pageItems[index].childCount + 1;\n        pageItems[index].childCount = count;\n        pageItems[index].children.push({\n            key: key + count,\n            name: `Item ${count}`,\n            quantity: 0,\n            rate: 0,\n            header: false,\n        });\n        //this.props.setPageData(pageItems);\n        this.props.dispatch({ type: \"page\", step: this.props.step, pageData: pageItems });\n    };\n\n    handleSave = (row) => {\n        const newData = [...this.props.pageData.items];\n        const hIndex = newData.findIndex((item) => row.key.charAt(0) === item.key);\n        const item = newData[hIndex];\n        if (row.header === undefined || !row.header) {\n            const cIndex = newData[hIndex].children.findIndex(\n                (item) => row.key === item.key\n            );\n            const child = newData[hIndex].children[cIndex];\n            newData[hIndex].children.splice(cIndex, 1, {\n                ...child,\n                ...row,\n            });\n        } else {\n            newData.splice(hIndex, 1, { ...item, ...row });\n        }\n        // this.props.setPageData(newData);\n        this.props.dispatch({ type: \"page\", step: this.props.step, pageData: newData });\n    };\n\n    handleComment = async () => {};\n\n    render() {\n        const { pageData } = this.props;\n        const components = {\n            body: {\n                row: EditableRow,\n                cell: EditableCell,\n            },\n        };\n        const columns = this.columns.map((col) => {\n            if (!col.editable) {\n                return col;\n            }\n\n            return {\n                ...col,\n                onCell: (record) => ({\n                    record,\n                    editable: col.editable,\n                    dataIndex: col.dataIndex,\n                    title: col.title,\n                    inputType: col.inputType,\n                    handleSave: this.handleSave,\n                }),\n            };\n        });\n        return (\n            <div className={styles.content}>\n                <Title>{this.props.pageData.label}</Title>\n                <Button\n                    onClick={this.handleAdd}\n                    type=\"primary\"\n                    style={{\n                        marginTop: 24,\n                        marginBottom: 16,\n                    }}\n                    ref={this.addWrapper}\n                >\n                    Add a Section\n                </Button>\n                <Table\n                    components={components}\n                    rowClassName={() => \"editable-row\"}\n                    bordered\n                    dataSource={pageData.items}\n                    columns={columns}\n                    expandable={{\n                        expandRowByClick: true,\n                    }}\n                    pagination={{ hideOnSinglePage: true }}\n                    summary={(pageData) => {\n                        const total = pageData\n                            .map((el) =>\n                                el.children\n                                    .map(\n                                        (c) =>\n                                            Number.parseInt(c.quantity) *\n                                            Number.parseFloat(c.rate)\n                                    )\n                                    .reduce((acc, curr) => acc + curr, 0)\n                            )\n                            .reduce((acc, curr) => acc + curr, 0);\n                        return (\n                            <Table.Summary.Row>\n                                <Table.Summary.Cell colSpan={3}>Total</Table.Summary.Cell>\n                                <Table.Summary.Cell>\n                                    <Text\n                                        style={{\n                                            fontWeight: \"bolder\",\n                                        }}\n                                    >\n                                        {new Intl.NumberFormat(\"en-US\", {\n                                            style: \"currency\",\n                                            currency: \"USD\",\n                                        }).format(total)}\n                                    </Text>\n                                </Table.Summary.Cell>\n                            </Table.Summary.Row>\n                        );\n                    }}\n                />\n                <Form.Item style={{ margin: \"2rem\" }} label=\"Comments\">\n                    <TextArea\n                        value={this.props.pageData.comments}\n                        onChange={(val) => {\n                            this.props.dispatch({\n                                type: \"comment\",\n                                comment: val.target.value,\n                                step: this.props.step,\n                            });\n                        }}\n                    />\n                </Form.Item>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport styles from \"./BudgetInfo.module.scss\";\n\nimport { Typography, Form, DatePicker, Input, InputNumber, Radio, Col, Row } from \"antd\";\nimport moment from \"moment\";\n\nconst { Title } = Typography;\nconst { RangePicker } = DatePicker;\n\nconst formItemLayout = {\n    labelCol: { xs: 16, sm: 14, md: 12, lg: 8, xl: 6, xxl: 4 },\n    wrapperCol: { span: 16 },\n};\nconst dateFormat = \"MM/DD/YYYY\";\nconst percentFormatter = (value) => `${value}%`;\n\nexport default function BudgetInfo(props) {\n    const [form] = Form.useForm();\n    const save = async () => {\n        const values = await form.validateFields();\n        props.dispatch({ type: \"info\", payload: values });\n    };\n    return (\n        <div className={styles.content}>\n            <Title className={styles.pageTitle}>Information</Title>\n            <Form\n                form={form}\n                {...formItemLayout}\n                initialValues={{\n                    name: props.infoData.name,\n                    project: props.infoData.project,\n                    division: props.infoData.division,\n                    range:\n                        props.infoData.start && props.infoData.end\n                            ? [\n                                  moment.unix(props.infoData.start),\n                                  moment.unix(props.infoData.end),\n                              ]\n                            : null,\n                    grant: props.infoData.grant,\n                    contact: props.infoData.contact,\n                    phone: props.infoData.phone,\n                    faoff: props.infoData.faoff,\n                    faon: props.infoData.faon,\n                    gross: props.infoData.gross,\n                }}\n            >\n                <Form.Item name=\"name\" label=\"Vendor/Contractor Name\">\n                    <Input onPressEnter={save} onBlur={save} />\n                </Form.Item>\n                <Form.Item name=\"project\" label=\"Project Name\">\n                    <Input onPressEnter={save} onBlur={save} />\n                </Form.Item>\n                <Form.Item name=\"division\" label=\"Division Name\">\n                    <Input onPressEnter={save} onBlur={save} />\n                </Form.Item>\n                <Form.Item name=\"range\" label=\"Project Period\">\n                    <RangePicker onChange={save} format={dateFormat} />\n                </Form.Item>\n                <Form.Item name=\"grant\" label=\"Grant or Non-Grant\">\n                    <Radio.Group>\n                        <Radio.Button value={true}>Grant</Radio.Button>\n                        <Radio.Button value={false}>Non Grant</Radio.Button>\n                    </Radio.Group>\n                </Form.Item>\n                <Form.Item name=\"contact\" label=\"Contact Name\">\n                    <Input onPressEnter={save} onBlur={save} />\n                </Form.Item>\n                <Form.Item name=\"phone\" label=\"Phone Number\">\n                    <Input type=\"tel\" onPressEnter={save} onBlur={save} />\n                </Form.Item>\n                <Row>\n                    <Col span={8}>\n                        <Form.Item\n                            name=\"faoff\"\n                            label=\"F&A Rate Off-Site\"\n                            labelCol={{ span: 14 }}\n                        >\n                            <InputNumber\n                                formatter={percentFormatter}\n                                onPressEnter={save}\n                                onBlur={save}\n                                min={0}\n                            />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item\n                            name=\"faon\"\n                            label=\"F&A Rate On-Site\"\n                            labelCol={{ span: 14 }}\n                        >\n                            <InputNumber\n                                formatter={percentFormatter}\n                                onPressEnter={save}\n                                onBlur={save}\n                                min={0}\n                            />\n                        </Form.Item>\n                    </Col>\n                    <Col span={8}>\n                        <Form.Item\n                            name=\"gross\"\n                            label=\"Gross Margin\"\n                            labelCol={{ span: 14 }}\n                        >\n                            <InputNumber\n                                formatter={percentFormatter}\n                                onPressEnter={save}\n                                onBlur={save}\n                                min={0}\n                            />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport ExportCSV from \"../../components/ExportCSV\";\nimport BudgetSteps from \"../../components/BudgetSteps\";\nimport BudgetPage from \"../BudgetPage\";\nimport BudgetInfo from \"../BudgetInfo\";\n\nimport styles from \"./Main.module.scss\";\nimport { Layout, Col, Row, Button, Space, Popconfirm } from \"antd\";\nconst { Content } = Layout;\n\nexport default function Main(props) {\n    return (\n        <Content>\n            <Row className={styles.row}>\n                <Col span={5} pull={5} className={styles.col}>\n                    <BudgetSteps onChange={props.onChange} page={props.step} />\n                    <div style={{ textAlign: \"center\" }}>\n                        <Space align=\"center\" style={{ marginBottom: \"3rem\" }}>\n                            <ExportCSV\n                                csvData={props.data}\n                                fileName={\"Pricing and Budget\"}\n                            />\n                            <Popconfirm\n                                title=\"Sure to reset?\"\n                                onConfirm={() => props.dispatch({ type: \"reset\" })}\n                            >\n                                <Button type=\"ghost\">Reset</Button>\n                            </Popconfirm>\n                        </Space>\n                    </div>\n                </Col>\n                <Col span={19} push={5}>\n                    {props.step === 0 ? (\n                        <BudgetInfo\n                            dispatch={props.dispatch}\n                            infoData={props.data.info}\n                        />\n                    ) : (\n                        <BudgetPage\n                            pageData={props.data.pages[props.step - 1]}\n                            step={props.step - 1}\n                            dispatch={props.dispatch}\n                        />\n                    )}\n                </Col>\n            </Row>\n        </Content>\n    );\n}\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Main from \"./pages/Main\";\nimport { Layout } from \"antd\";\nconst { Header } = Layout;\n\nlet defaultData = require(\"./utils/default.json\");\n\nfunction reducer(state, action) {\n    switch (action.type) {\n        case \"page\": // action = {step, pageData}\n            const newPages = [...state.pages];\n            newPages[action.step].items = action.pageData;\n            return { ...state, pages: newPages };\n        case \"comment\": // action = {step, comment}\n            const commentPages = [...state.pages];\n            commentPages[action.step].comments = action.comment;\n            return {\n                ...state,\n                pages: commentPages,\n            };\n        case \"info\": // action = {dataItem, infoData}\n            let newInfo = state.info;\n            for (const [key, value] of Object.entries(action.payload)) {\n                if (value === undefined || value === null) continue;\n                if (key === \"range\") {\n                    const [start, end] = value;\n                    newInfo.start = start.unix();\n                    newInfo.end = end.unix();\n                } else {\n                    newInfo[key] = value;\n                }\n            }\n            return { ...state, info: newInfo };\n        case \"reset\":\n            return defaultData;\n        default:\n            throw new Error(\"Action of unknown type.\");\n    }\n}\n\n// TODO: change to useReducer and create reducer function\nfunction App() {\n    const [step, setStep] = useState(0);\n    const onChange = (current) => setStep(current);\n    const localState = JSON.parse(localStorage.getItem(\"VLProjectBudget\")) || defaultData;\n    const [data, dispatch] = useReducer(reducer, localState || defaultData);\n    useEffect(() => {\n        localStorage.setItem(\"VLProjectBudget\", JSON.stringify(data));\n    }, [data]);\n\n    if (!data.info || !data.pages) {\n        dispatch({ type: \"reset\" });\n    }\n    return (\n        <Layout>\n            <Header\n                style={{\n                    position: \"fixed\",\n                    zIndex: 2,\n                    width: \"100%\",\n                    textAlign: \"center\",\n                }}\n            >\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            </Header>\n            <Layout>\n                <Main step={step} data={data} dispatch={dispatch} onChange={onChange} />\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}